{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\ShoppingProject\\\\client\\\\src\\\\components\\\\signup\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom'; // Components\n\nimport Carusel from '../caursel/Carusel'; //  Images\n\nimport SignUpPhoto from '../../images/signPhoto.png'; // material ui\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, Button, Paper, Collapse, InputAdornment, Select, MenuItem, Hidden, Stepper, Step, StepLabel } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Alert from '@material-ui/lab/Alert';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'; // formik\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // css\n\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '20px'\n  },\n  image: {\n    position: 'relative',\n    backgroundImage: `url(${SignUpPhoto})`,\n    backgroundRepeat: 'no-repeat',\n    alignSelf: 'center',\n    backgroundPosition: '0 0',\n    backgroundSize: '454px 618px',\n    flexBasis: '454px',\n    height: '618px'\n  },\n  formGrid: {\n    margin: '70px 15px'\n  },\n  paper: {\n    margin: theme.spacing(3, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst SignUp = ({\n  setIsAuth\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [openAlert, setOpenAlert] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [chosenCity, setChosenCity] = useState('');\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['Basic authentication details', 'Advanced authentication details'];\n  const cityArr = ['Ashdod', 'Beer Sheva', 'Beni Brak', 'Heifa', 'Netaniya', 'Petah Tikva', 'Ramat Gan', 'Rishon Lezion', 'Tel Aviv'];\n  const classes = useStyles();\n  const history = useHistory(); // Form validation\n\n  const validationSchema = Yup.object().shape({\n    firstname: Yup.string().required('first name is required!'),\n    lastname: Yup.string().required('last name is required!'),\n    username: Yup.string().required('user name is required!').email(),\n    password: Yup.string().required('password is required!').min(6, 'password have to be at least 6 characters long'),\n    confirmPassword: Yup.string().required('confirm your password!').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n    city: Yup.string().required('city is required!'),\n    street: Yup.string().required('street is required!')\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  }); // Handle password visiblity \n\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword); // Handle confirm password visiblity \n\n\n  const handleClickConfirmPassword = () => setShowConfirmPassword(!showConfirmPassword); // Handle next stepper state\n\n\n  const handleNext = () => setActiveStep(prev => prev + 1); // Handle back stepper state\n\n\n  const handleBack = () => setActiveStep(prev => prev - 1); // Check if user excist\n\n\n  const isUserExcist = async username => {\n    const response = await fetch('/auth/username', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username\n      })\n    });\n    const {\n      success,\n      error\n    } = await response.json();\n\n    if (success) {\n      handleNext();\n    } else {\n      setMessage(error);\n      setOpenAlert(true);\n    }\n  }; // Sign up new user\n\n\n  const signUpUser = async values => {\n    try {\n      setButtonDisabled(true);\n      const response = await fetch('/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ ...values,\n          admin: true\n        })\n      });\n      const {\n        user,\n        error\n      } = await response.json();\n\n      if (user) {\n        localStorage.setItem('user', JSON.stringify({ ...user,\n          newUser: true\n        }));\n        const res = await fetch('/cart', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            date: new Date().toLocaleDateString(),\n            completed: false,\n            UserId: user.id\n          })\n        });\n        const {\n          cart\n        } = await res.json();\n        localStorage.setItem('availableCart', JSON.stringify(cart));\n        setTimeout(() => {\n          setButtonDisabled(false);\n          setIsAuth(true);\n          history.push('/products/1');\n        }, 100);\n      } else {\n        setMessage(error);\n        setOpenAlert(true);\n        setButtonDisabled(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      mdDown: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        lg: 4,\n        className: classes.image,\n        children: /*#__PURE__*/_jsxDEV(Carusel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      className: classes.formGrid,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\",\n          width: \"100\",\n          height: \"100\",\n          crop: \"scale\",\n          alt: \"cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          children: steps.map(step => /*#__PURE__*/_jsxDEV(Step, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(StepLabel, {\n              children: step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 35\n            }, this)]\n          }, step, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: '',\n            password: '',\n            firstname: '',\n            lastname: ''\n          },\n          onSubmit: (values, {\n            resetForm\n          }) => signUpUser(values, resetForm),\n          validationSchema: validationSchema,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              style: {\n                textAlign: 'center'\n              },\n              onSubmit: props.handleSubmit,\n              autoComplete: \"off\",\n              children: [activeStep === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"username\",\n                  margin: \"normal\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...props.getFieldProps('username'),\n                  ...errorHelper(props, 'username')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  type: showPassword ? \"text\" : \"password\",\n                  variant: \"outlined\",\n                  margin: \"normal\",\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  ...props.getFieldProps('password'),\n                  ...errorHelper(props, 'password'),\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: handleClickShowPassword,\n                        children: [\" \", showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 88\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 112\n                        }, this), \"  \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 23\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  type: showConfirmPassword ? \"text\" : \"password\",\n                  variant: \"outlined\",\n                  margin: \"normal\",\n                  fullWidth: true,\n                  name: \"confirmPassword\",\n                  label: \"Confirm Password\",\n                  ...props.getFieldProps('confirmPassword'),\n                  ...errorHelper(props, 'confirmPassword'),\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: handleClickConfirmPassword,\n                        children: [\" \", showConfirmPassword ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 98\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 122\n                        }, this), \"  \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 23\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                  in: openAlert,\n                  children: /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    action: /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"inherit\",\n                      size: \"small\",\n                      onClick: () => setOpenAlert(false),\n                      children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                        fontSize: \"inherit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 109\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 30\n                    }, this),\n                    children: message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: props.values.username && !props.errors.username && props.values.password && !props.errors.password && props.values.confirmPassword && !props.errors.confirmPassword && !buttonDisabled ? false : true,\n                  className: \"my-3\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"large\",\n                  fullWidth: true,\n                  onClick: () => isUserExcist(props.values.username),\n                  children: \" Next \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true), activeStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"firstname\",\n                  margin: \"normal\",\n                  label: \"First name\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...props.getFieldProps('firstname'),\n                  ...errorHelper(props, 'firstname')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"lastname\",\n                  margin: \"normal\",\n                  label: \"Last name\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...props.getFieldProps('lastname'),\n                  ...errorHelper(props, 'lastname')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: chosenCity,\n                  onChange: e => setChosenCity(e.target.value),\n                  name: \"city\",\n                  fullWidth: true,\n                  ...props.getFieldProps('city'),\n                  ...errorHelper(props, 'city'),\n                  children: cityArr.map(city => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: city,\n                    children: city\n                  }, city, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"street\",\n                  margin: \"normal\",\n                  label: \"Street\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...props.getFieldProps('street'),\n                  ...errorHelper(props, 'street')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: props.values.firstname && props.values.lastname && props.values.city && props.values.street ? false : true,\n                  className: \"my-3\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"large\",\n                  fullWidth: true,\n                  type: \"submit\",\n                  children: \" Sign up \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"my-3\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"large\",\n                  fullWidth: true,\n                  onClick: handleBack,\n                  children: \" Back \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/signin\",\n                    variant: \"body2\",\n                    children: \" Already have an account? Sign In \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignUp, \"STkg5N4wiYfm217Y5jSImBJMQZY=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/ShoppingProject/client/src/components/signup/SignUp.js"],"names":["React","useState","useHistory","Link","Carusel","SignUpPhoto","makeStyles","Grid","TextField","Button","Paper","Collapse","InputAdornment","Select","MenuItem","Hidden","Stepper","Step","StepLabel","CloseIcon","IconButton","Alert","VisibilityIcon","VisibilityOffIcon","Formik","Yup","useStyles","theme","root","marginTop","image","position","backgroundImage","backgroundRepeat","alignSelf","backgroundPosition","backgroundSize","flexBasis","height","formGrid","margin","paper","spacing","display","flexDirection","alignItems","form","width","SignUp","setIsAuth","message","setMessage","openAlert","setOpenAlert","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","chosenCity","setChosenCity","buttonDisabled","setButtonDisabled","activeStep","setActiveStep","steps","cityArr","classes","history","validationSchema","object","shape","firstname","string","required","lastname","username","email","password","min","confirmPassword","oneOf","ref","city","street","errorHelper","formik","values","error","errors","touched","helperText","handleClickShowPassword","handleClickConfirmPassword","handleNext","prev","handleBack","isUserExcist","response","fetch","method","headers","body","JSON","stringify","success","json","signUpUser","admin","user","localStorage","setItem","newUser","res","date","Date","toLocaleDateString","completed","UserId","id","cart","setTimeout","push","console","map","step","resetForm","props","textAlign","handleSubmit","getFieldProps","endAdornment","e","target","value"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n// Components\r\nimport Carusel from '../caursel/Carusel'\r\n//  Images\r\nimport SignUpPhoto from '../../images/signPhoto.png'\r\n// material ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Grid, TextField, Button, Paper, Collapse, InputAdornment, Select, MenuItem, Hidden, Stepper, Step, StepLabel } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\n// formik\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n// css\r\nimport './style.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop:'20px'\r\n    },\r\n    image: {\r\n      position:'relative',\r\n      backgroundImage: `url(${SignUpPhoto})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      alignSelf: 'center',\r\n      backgroundPosition: '0 0',\r\n      backgroundSize: '454px 618px',\r\n      flexBasis: '454px',\r\n      height: '618px',\r\n    },\r\n    formGrid: {\r\n      margin:'70px 15px'\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(3, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    }\r\n}))\r\n\r\n\r\nconst SignUp = ({ setIsAuth }) => {\r\n  const [message, setMessage] = useState('')\r\n  const [openAlert, setOpenAlert] = useState(false)\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n  const [chosenCity, setChosenCity] = useState('')\r\n  const [buttonDisabled, setButtonDisabled] = useState(false)\r\n  const [activeStep, setActiveStep] = useState(0)\r\n  const steps = ['Basic authentication details', 'Advanced authentication details']\r\n  const cityArr = ['Ashdod', 'Beer Sheva', 'Beni Brak', 'Heifa','Netaniya', 'Petah Tikva', 'Ramat Gan', 'Rishon Lezion', 'Tel Aviv' ]\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  \r\n  // Form validation\r\n  const validationSchema = Yup.object().shape({\r\n    firstname:Yup.string()\r\n    .required('first name is required!'),\r\n    lastname:Yup.string()\r\n    .required('last name is required!'),\r\n    username:Yup.string()\r\n    .required('user name is required!')\r\n    .email(),\r\n    password:Yup.string()\r\n    .required('password is required!')\r\n    .min(6, 'password have to be at least 6 characters long'),\r\n    confirmPassword:Yup.string()\r\n    .required('confirm your password!')\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n    city:Yup.string()\r\n    .required('city is required!'),\r\n    street:Yup.string()\r\n    .required('street is required!'),\r\n    })\r\n\r\n  const errorHelper = (formik,values) => ({\r\n      error: formik.errors[values] && formik.touched[values] ? true : false,\r\n      helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\r\n  })\r\n \r\n  // Handle password visiblity \r\n  const  handleClickShowPassword = () => setShowPassword(!showPassword)\r\n\r\n  // Handle confirm password visiblity \r\n  const handleClickConfirmPassword = () => setShowConfirmPassword(!showConfirmPassword)\r\n  \r\n  // Handle next stepper state\r\n  const handleNext = () => setActiveStep((prev) => prev + 1)\r\n\r\n  // Handle back stepper state\r\n  const handleBack = () => setActiveStep((prev) => prev - 1)\r\n\r\n  // Check if user excist\r\n  const isUserExcist = async (username) => {\r\n    const response = await fetch('/auth/username', { \r\n      method: 'POST',\r\n      headers: {\r\n       'Content-Type':'application/json'\r\n     },\r\n     body: JSON.stringify({ username })\r\n     })\r\n     const { success, error } = await response.json()\r\n    if(success) {\r\n      handleNext()\r\n    } else {\r\n      setMessage(error)\r\n      setOpenAlert(true)\r\n    }\r\n  }\r\n\r\n  // Sign up new user\r\n  const signUpUser = async (values) => {\r\n    try {\r\n        setButtonDisabled(true)\r\n         const response = await fetch('/auth/signup', { \r\n         method: 'POST',\r\n         headers: {\r\n          'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({ ...values, admin: true })\r\n        })\r\n        const { user, error } = await response.json()\r\n        if(user) {\r\n          localStorage.setItem('user', JSON.stringify({...user, newUser:true }))\r\n          const res = await fetch('/cart',{ method: 'POST',\r\n          headers: {\r\n              'Content-Type':'application/json'\r\n          },\r\n          body: JSON.stringify({ date: new Date().toLocaleDateString(), completed: false, UserId: user.id})\r\n          })\r\n          const { cart } = await res.json()\r\n          localStorage.setItem('availableCart',JSON.stringify(cart))\r\n          setTimeout(() => {\r\n            setButtonDisabled(false)\r\n            setIsAuth(true)\r\n            history.push('/products/1')\r\n          } ,100)\r\n          } else {\r\n          setMessage(error)\r\n          setOpenAlert(true)\r\n          setButtonDisabled(false)\r\n          }\r\n        } catch (error) {\r\n            console.error(error)\r\n          }\r\n      }\r\n  \r\n    return (\r\n      <Grid container className={classes.root}>\r\n\r\n        {/* Carusel */}\r\n        <Hidden mdDown>\r\n            <Grid item xs={1} md={2}></Grid>\r\n            <Grid item xs={2} lg={4} className={classes.image} >\r\n              <Carusel />\r\n            </Grid>\r\n      </Hidden>\r\n \r\n      {/* Sign up form */}\r\n      <Grid item xs={12} lg={6}  component={Paper} elevation={6} square className={classes.formGrid}>\r\n          <div className={classes.paper}>\r\n          <img src=\"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\" width=\"100\" height=\"100\" crop=\"scale\" alt=\"cart\" />\r\n          <Stepper activeStep={activeStep}>\r\n            {steps.map(step => (\r\n                <Step key={step}> <StepLabel>{step}</StepLabel></Step>\r\n            ))}\r\n          </Stepper>\r\n            <Formik\r\n              initialValues={{username:'',password:'', firstname:'', lastname:''}}\r\n              onSubmit={(values,{resetForm}) => signUpUser(values, resetForm)}\r\n              validationSchema={validationSchema}\r\n              enableReinitialize={true}>\r\n              {(props) => (\r\n                <>\r\n                <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\r\n                { activeStep === 0 && \r\n                <>\r\n                <TextField name=\"username\" margin=\"normal\" label=\"Email\" variant=\"outlined\" fullWidth {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \r\n                 \r\n               <TextField  type={showPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" {...props.getFieldProps('password')} {...errorHelper(props,'password')} \r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\r\n                      </InputAdornment>\r\n                  )}} />\r\n\r\n                <TextField type={showConfirmPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"confirmPassword\" label=\"Confirm Password\" {...props.getFieldProps('confirmPassword')} {...errorHelper(props,'confirmPassword')} \r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton onClick={handleClickConfirmPassword}> {showConfirmPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\r\n                      </InputAdornment>\r\n                  )}} />\r\n                {/* Alert error */}\r\n                <Collapse in={openAlert}>\r\n                  <Alert\r\n                    severity=\"error\"\r\n                    action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\r\n                    {message}\r\n                  </Alert>\r\n                </Collapse>\r\n\r\n                <Button \r\n                disabled={props.values.username && !props.errors.username \r\n                && props.values.password &&  !props.errors.password \r\n                && props.values.confirmPassword &&  !props.errors.confirmPassword && !buttonDisabled ? false : true} \r\n                className=\"my-3\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth onClick={() => isUserExcist(props.values.username)}> Next </Button>\r\n                </>\r\n                }\r\n\r\n                { activeStep === 1 && \r\n                <>\r\n                  <TextField name=\"firstname\" margin=\"normal\" label=\"First name\" variant=\"outlined\" fullWidth {...props.getFieldProps('firstname')} {...errorHelper(props,'firstname')}/>\r\n                  <TextField name=\"lastname\" margin=\"normal\" label=\"Last name\" variant=\"outlined\" fullWidth {...props.getFieldProps('lastname')} {...errorHelper(props,'lastname')}/>   \r\n                \r\n                  <Select value={chosenCity} onChange={(e) => setChosenCity(e.target.value)} name=\"city\" fullWidth  {...props.getFieldProps('city')} {...errorHelper(props,'city')}>\r\n                    {cityArr.map(city => (\r\n                      <MenuItem key={city} value={city}>{city}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n\r\n                  <TextField name=\"street\" margin=\"normal\" label=\"Street\" variant=\"outlined\" fullWidth {...props.getFieldProps('street')} {...errorHelper(props,'street')}/>   \r\n             \r\n                \r\n                <Button \r\n                disabled={props.values.firstname && props.values.lastname \r\n                && props.values.city &&  props.values.street ? false : true} \r\n                className=\"my-3\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth type=\"submit\"> Sign up </Button>\r\n                \r\n                <Button className=\"my-3\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth onClick={handleBack}> Back </Button>\r\n                </>\r\n                }\r\n             \r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <Link to=\"/signin\" variant=\"body2\"> Already have an account? Sign In </Link>\r\n                    </Grid>\r\n                  </Grid>    \r\n                </form> \r\n                </>\r\n                )}\r\n            </Formik>  \r\n          </div>\r\n        </Grid> \r\n        <Grid item xs={2}></Grid>\r\n      </Grid>   \r\n    )\r\n}\r\nexport default SignUp\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}