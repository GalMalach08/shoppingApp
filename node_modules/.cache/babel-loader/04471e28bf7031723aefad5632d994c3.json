{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\ShoppingProject\\\\client\\\\src\\\\components\\\\signup\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Carusel from '../caursel/Carusel'; // import images\n\nimport SignUpPhoto from '../../images/signPhoto.png'; // material ui\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, Button, Link, Paper, Collapse, InputAdornment, Select, MenuItem, Hidden, Stepper, Step, StepLabel } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Alert from '@material-ui/lab/Alert';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'; // formik\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // cloudinary\n\nimport { Image } from 'cloudinary-react'; // recaptcha\n\nimport ReCaptcha from 'react-google-recaptcha'; // css\n\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '20px'\n  },\n  image: {\n    position: 'relative',\n    backgroundImage: `url(${SignUpPhoto})`,\n    backgroundRepeat: 'no-repeat',\n    alignSelf: 'center',\n    backgroundPosition: '0 0',\n    backgroundSize: '454px 618px',\n    flexBasis: '454px',\n    height: '618px'\n  },\n  slider: {\n    width: '54%',\n    margin: '99px 0 0 151px',\n    position: 'relative',\n    left: '-3px',\n    bottom: '3px'\n  },\n  formGrid: {\n    margin: '70px 15px'\n  },\n  paper: {\n    margin: theme.spacing(3, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  profileBtn: {\n    paddingTop: '10px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  },\n  imageIcon: {\n    marginBottom: '8px',\n    marginRight: '5px'\n  },\n  nameTextField: {\n    marginRight: '4px'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst SignUp = ({\n  setIsAuth\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [openAlert, setOpenAlert] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [chosenCity, setChosenCity] = useState('');\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [activeStep, setActiveStep] = useState(1);\n  const steps = ['Basic authentication details', 'Advanced authentication details', 'Are You Sure ?'];\n  const cityArr = ['Ashdod', 'Beer Sheva', 'Beni Brak', 'Heifa', 'Netaniya', 'Petah Tikva', 'Ramat Gan', 'Rishon Lezion', 'Tel Aviv'];\n  const classes = useStyles();\n  const history = useHistory(); // Form validation\n\n  const validationSchema = Yup.object().shape({\n    firstname: Yup.string().required('first name is required!'),\n    lastname: Yup.string().required('last name is required!'),\n    username: Yup.string().required('user name is required!').email(),\n    password: Yup.string().required('password is required!').min(6, 'password have to be at least 6 characters long'),\n    confirmPassword: Yup.string().required('confirm your password!').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n    city: Yup.string().required('city is required!'),\n    street: Yup.string().required('street is required!')\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  }); // Handle password visiblity \n\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  }; // Handle confirm password visiblity \n\n\n  const handleClickConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const handleNext = () => {\n    setActiveStep(prev => prev + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prev => prev - 1);\n  };\n\n  const nextBtn = () => /*#__PURE__*/_jsxDEV(Button, {\n    className: \"m-3\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    children: \"next\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n\n  const prevBtn = () => /*#__PURE__*/_jsxDEV(Button, {\n    className: \"m-3\",\n    variant: \"contained\",\n    onClick: handleBack,\n    children: \"back\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this); // Add new user\n\n\n  const signUpUser = async values => {\n    try {\n      setButtonDisabled(true);\n      const response = await fetch('http://localhost:3001/user/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ ...values\n        })\n      });\n      const data = await response.json();\n\n      if (data.user) {\n        localStorage.setItem('user', JSON.stringify({ ...data.user,\n          newUser: true\n        }));\n        setIsAuth(true);\n        setButtonDisabled(false);\n        history.push('/');\n      } else {\n        setMessage(data.error);\n        setOpenAlert(true);\n        setButtonDisabled(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      mdDown: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        md: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        lg: 4,\n        className: classes.image,\n        children: /*#__PURE__*/_jsxDEV(Carusel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      className: classes.formGrid,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\",\n          width: \"100\",\n          height: \"100\",\n          crop: \"scale\",\n          alt: \"cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          children: steps.map(step => /*#__PURE__*/_jsxDEV(Step, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(StepLabel, {\n              children: step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 35\n            }, this)]\n          }, step, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: '',\n            password: '',\n            firstname: '',\n            lastname: ''\n          },\n          onSubmit: (values, {\n            resetForm\n          }) => signUpUser(values, resetForm),\n          validationSchema: validationSchema,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              style: {\n                textAlign: 'center'\n              },\n              onSubmit: props.handleSubmit,\n              autoComplete: \"off\",\n              children: [activeStep === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"username\",\n                  margin: \"normal\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...props.getFieldProps('username'),\n                  ...errorHelper(props, 'username')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  type: showPassword ? \"text\" : \"password\",\n                  variant: \"outlined\",\n                  margin: \"normal\",\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  ...props.getFieldProps('password'),\n                  ...errorHelper(props, 'password'),\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: handleClickShowPassword,\n                        children: [\" \", showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 88\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 112\n                        }, this), \"  \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 23\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  type: showConfirmPassword ? \"text\" : \"password\",\n                  variant: \"outlined\",\n                  margin: \"normal\",\n                  fullWidth: true,\n                  name: \"confirmPassword\",\n                  label: \"Confirm Password\",\n                  ...props.getFieldProps('confirmPassword'),\n                  ...errorHelper(props, 'confirmPassword'),\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: handleClickConfirmPassword,\n                        children: [\" \", showConfirmPassword ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 98\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 122\n                        }, this), \"  \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 17\n                }, this), props.values.username && !props.errors.username && props.values.password && !props.errors.password && props.values.confirmPassword && !props.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: false,\n                  className: \"my-3\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"large\",\n                  fullWidth: true,\n                  onClick: handleNext,\n                  children: \" Next \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: true,\n                  className: \"my-3\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"large\",\n                  fullWidth: true,\n                  children: \" Next \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true), activeStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    marginBottom: '15px',\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"lastname\",\n                    margin: \"normal\",\n                    label: \"Last name\",\n                    variant: \"outlined\",\n                    fullWidth: true,\n                    ...props.getFieldProps('lastname'),\n                    ...errorHelper(props, 'lastname')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: chosenCity,\n                  onChange: e => setChosenCity(e.target.value),\n                  name: \"city\",\n                  fullWidth: true,\n                  ...props.getFieldProps('city'),\n                  ...errorHelper(props, 'city'),\n                  children: cityArr.map(city => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: city,\n                    children: city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"street\",\n                  margin: \"normal\",\n                  label: \"Street\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  ...props.getFieldProps('street'),\n                  ...errorHelper(props, 'street')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), props.values.username && !props.errors.username && props.values.password && !props.errors.password && props.values.confirmPassword && !props.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: false,\n                  className: \"my-3\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"large\",\n                  fullWidth: true,\n                  onClick: handleNext,\n                  children: \" Next \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 17\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: true,\n                  className: \"my-3\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"large\",\n                  fullWidth: true,\n                  children: \" Next \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Collapse, {\n                in: openAlert,\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"error\",\n                  action: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"inherit\",\n                    size: \"small\",\n                    onClick: () => setOpenAlert(false),\n                    children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                      fontSize: \"inherit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 111\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 32\n                  }, this),\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: \"/signin\",\n                    variant: \"body2\",\n                    children: \" Already have an account? Sign In \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignUp, \"iV0Z5EpnJQbiPdbZbBL4x4ZkRQU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = SignUp;\nexport default SignUp; // const handleChangeImage = (e, setFieldValue) => {\n//   setFieldValue(\"photo\", e.target.files[0])\n//   if(e.target.files.length === 0) {\n//     setIsProfile(false)\n//     setFileName('')\n//   } \n//   else {\n//     setIsProfile(true)\n//     setFileName(e.target.files[0].name)\n//   }\n// }\n// // Edit the profile image\n// const editProfile =  (values) => {\n//  values.fileName = fileName\n//  if(typeof values.photo === 'object' ) {\n//   const reader = new FileReader()\n//   reader.readAsDataURL(values.photo)\n//   reader.onloadend = () => {\n//     values.photo = reader.result\n//     signUpUser(values)\n//   }\n//  } else {\n//   signUpUser(values)\n//  }\n// }\n\n{\n  /* <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \r\n  <Button style={{display:'flex', alignItems:'center', margin:'5px 0px'}} color='primary'  variant=\"outlined\">\r\n  <div style={{marginRight:'7px'}}><ImageIcon/></div>\r\n  <label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'PROFILE IMAGE'} </label></Button>\r\n  {props.errors.photo && props.touched.photo ?  <div className=\"error\">{props.errors.photo}</div>  : null} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/ShoppingProject/client/src/components/signup/SignUp.js"],"names":["React","useState","useEffect","useHistory","Carusel","SignUpPhoto","makeStyles","Grid","TextField","Button","Link","Paper","Collapse","InputAdornment","Select","MenuItem","Hidden","Stepper","Step","StepLabel","CloseIcon","IconButton","Alert","VisibilityIcon","VisibilityOffIcon","Formik","Yup","Image","ReCaptcha","useStyles","theme","root","marginTop","image","position","backgroundImage","backgroundRepeat","alignSelf","backgroundPosition","backgroundSize","flexBasis","height","slider","width","margin","left","bottom","formGrid","paper","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","profileBtn","paddingTop","marginBottom","imageIcon","marginRight","nameTextField","submit","SignUp","setIsAuth","message","setMessage","openAlert","setOpenAlert","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","chosenCity","setChosenCity","buttonDisabled","setButtonDisabled","activeStep","setActiveStep","steps","cityArr","classes","history","validationSchema","object","shape","firstname","string","required","lastname","username","email","password","min","confirmPassword","oneOf","ref","city","street","errorHelper","formik","values","error","errors","touched","helperText","handleClickShowPassword","handleClickConfirmPassword","handleNext","prev","handleBack","nextBtn","prevBtn","signUpUser","response","fetch","method","headers","body","JSON","stringify","data","json","user","localStorage","setItem","newUser","push","console","map","step","resetForm","props","textAlign","handleSubmit","getFieldProps","endAdornment","e","target","value"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Carusel from '../caursel/Carusel'\r\n// import images\r\nimport SignUpPhoto from '../../images/signPhoto.png'\r\n// material ui\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Grid, TextField, Button, Link, Paper, Collapse, InputAdornment, Select, MenuItem, Hidden, Stepper, Step, StepLabel } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\n// formik\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n// cloudinary\r\nimport { Image } from 'cloudinary-react'\r\n// recaptcha\r\nimport ReCaptcha from 'react-google-recaptcha'\r\n// css\r\nimport './style.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop:'20px'\r\n    },\r\n    image: {\r\n      position:'relative',\r\n      backgroundImage: `url(${SignUpPhoto})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      alignSelf: 'center',\r\n      backgroundPosition: '0 0',\r\n      backgroundSize: '454px 618px',\r\n      flexBasis: '454px',\r\n      height: '618px',\r\n    },\r\n    slider: {\r\n      width:'54%',\r\n      margin: '99px 0 0 151px',\r\n      position: 'relative',\r\n      left:'-3px',\r\n      bottom: '3px'\r\n    },\r\n    formGrid: {\r\n      margin:'70px 15px'\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(3, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    profileBtn: {\r\n      paddingTop:'10px',\r\n      marginTop:'10px',\r\n      marginBottom:'10px'\r\n    },\r\n    imageIcon: {\r\n      marginBottom:'8px',\r\n      marginRight:'5px'\r\n    },\r\n    nameTextField: {\r\n      marginRight:'4px'\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n}))\r\n\r\n\r\nconst SignUp = ({ setIsAuth }) => {\r\n  const [message, setMessage] = useState('')\r\n  const [openAlert, setOpenAlert] = useState(false)\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n  const [chosenCity, setChosenCity] = useState('')\r\n  const [buttonDisabled, setButtonDisabled] = useState(false)\r\n  const [activeStep, setActiveStep] = useState(1)\r\n  const steps = ['Basic authentication details', 'Advanced authentication details', 'Are You Sure ?'];\r\n  const cityArr = ['Ashdod', 'Beer Sheva', 'Beni Brak', 'Heifa','Netaniya', 'Petah Tikva', 'Ramat Gan', 'Rishon Lezion', 'Tel Aviv' ]\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  \r\n  // Form validation\r\n  const validationSchema = Yup.object().shape({\r\n    firstname:Yup.string()\r\n    .required('first name is required!'),\r\n    lastname:Yup.string()\r\n    .required('last name is required!'),\r\n    username:Yup.string()\r\n    .required('user name is required!')\r\n    .email(),\r\n    password:Yup.string()\r\n    .required('password is required!')\r\n    .min(6, 'password have to be at least 6 characters long'),\r\n    confirmPassword:Yup.string()\r\n    .required('confirm your password!')\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n    city:Yup.string()\r\n    .required('city is required!'),\r\n    street:Yup.string()\r\n    .required('street is required!'),\r\n    })\r\n\r\n  const errorHelper = (formik,values) => ({\r\n      error: formik.errors[values] && formik.touched[values] ? true : false,\r\n      helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\r\n  })\r\n \r\n  // Handle password visiblity \r\n  const  handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword)\r\n  }\r\n\r\n  // Handle confirm password visiblity \r\n  const handleClickConfirmPassword = () => {\r\n    setShowConfirmPassword(!showConfirmPassword)\r\n  }\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prev) => prev + 1)\r\n}\r\n\r\nconst handleBack = () => {\r\n    setActiveStep((prev) => prev - 1)\r\n}\r\nconst nextBtn = () => (\r\n    <Button className=\"m-3\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n        next\r\n    </Button>\r\n)\r\n\r\nconst prevBtn = () => (\r\n    <Button className=\"m-3\" variant=\"contained\"  onClick={handleBack}>\r\n        back\r\n    </Button>\r\n)\r\n\r\n  // Add new user\r\n  const signUpUser = async (values) => {\r\n    try {\r\n      setButtonDisabled(true)\r\n         const response = await fetch('http://localhost:3001/user/signup', { \r\n         method: 'POST',\r\n         headers: {\r\n          'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({...values })\r\n        })\r\n        const data = await response.json()\r\n  \r\n        if(data.user){\r\n          localStorage.setItem('user', JSON.stringify({...data.user, newUser:true }))\r\n          setIsAuth(true)\r\n          setButtonDisabled(false)\r\n          history.push('/')\r\n        } else {\r\n          setMessage(data.error)\r\n          setOpenAlert(true)\r\n          setButtonDisabled(false)\r\n        }\r\n        } catch (error) {\r\n            console.error(error)\r\n          }\r\n  }\r\n  \r\n    return (\r\n      <Grid container className={classes.root}>\r\n        <Hidden mdDown>\r\n            <Grid item xs={1} md={2}></Grid>\r\n            <Grid item xs={2} lg={4} className={classes.image} >\r\n              <Carusel />\r\n            </Grid>\r\n      </Hidden>\r\n \r\n      {/* Sign up form */}\r\n      <Grid item xs={12} lg={6}  component={Paper} elevation={6} square className={classes.formGrid}>\r\n          <div className={classes.paper}>\r\n          <img  src=\"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\" width=\"100\" height=\"100\" crop=\"scale\" alt=\"cart\" />\r\n          <Stepper activeStep={activeStep}>\r\n            {steps.map(step => (\r\n                <Step key={step}> <StepLabel>{step}</StepLabel></Step>\r\n            ))}\r\n          </Stepper>\r\n            <Formik\r\n              initialValues={{username:'',password:'', firstname:'', lastname:''}}\r\n              onSubmit={(values,{resetForm}) => signUpUser(values, resetForm)}\r\n              validationSchema={validationSchema}\r\n              enableReinitialize={true}>\r\n              {(props) => (\r\n                <>\r\n                <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\r\n                { activeStep === 0 && \r\n                <>\r\n                <TextField name=\"username\" margin=\"normal\" label=\"Email\" variant=\"outlined\" fullWidth {...props.getFieldProps('username')} {...errorHelper(props,'username')}/>   \r\n                 \r\n               <TextField  type={showPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" {...props.getFieldProps('password')} {...errorHelper(props,'password')} \r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\r\n                      </InputAdornment>\r\n                  )}} />\r\n\r\n                <TextField type={showConfirmPassword ? \"text\": \"password\"} variant=\"outlined\" margin=\"normal\" fullWidth name=\"confirmPassword\" label=\"Confirm Password\" {...props.getFieldProps('confirmPassword')} {...errorHelper(props,'confirmPassword')} \r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton onClick={handleClickConfirmPassword}> {showConfirmPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\r\n                      </InputAdornment>\r\n                  )}} />\r\n\r\n                {props.values.username && !props.errors.username\r\n                && props.values.password && !props.errors.password\r\n                && props.values.confirmPassword && !props.errors.confirmPassword ?\r\n                <Button disabled={false} className=\"my-3\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth onClick={handleNext}> Next </Button>\r\n                :\r\n                <Button disabled={true} className=\"my-3\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth> Next </Button>\r\n                }\r\n                </>\r\n                }\r\n\r\n                { activeStep === 1 && \r\n                <>\r\n                  <div style={{display:'flex', marginBottom:'15px', width:'100%'}}>\r\n                    {/* <TextField className={classes.nameTextField} name=\"firstname\" margin=\"normal\" label=\"First name\" variant=\"outlined\" fullWidth {...props.getFieldProps('firstname')} {...errorHelper(props,'firstname')}/> */}\r\n                    <TextField name=\"lastname\" margin=\"normal\" label=\"Last name\" variant=\"outlined\" fullWidth {...props.getFieldProps('lastname')} {...errorHelper(props,'lastname')}/>   \r\n                  </div>  \r\n                  \r\n                  <Select value={chosenCity} onChange={(e) => setChosenCity(e.target.value)} name=\"city\" fullWidth  {...props.getFieldProps('city')} {...errorHelper(props,'city')}>\r\n                    {cityArr.map(city => (\r\n                      <MenuItem value={city}>{city}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n\r\n                  <TextField name=\"street\" margin=\"normal\" label=\"Street\" variant=\"outlined\" fullWidth {...props.getFieldProps('street')} {...errorHelper(props,'street')}/>   \r\n             \r\n                {props.values.username && !props.errors.username\r\n                && props.values.password && !props.errors.password\r\n                && props.values.confirmPassword && !props.errors.confirmPassword ?\r\n                <Button disabled={false} className=\"my-3\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth onClick={handleNext}> Next </Button>\r\n                :\r\n                <Button disabled={true} className=\"my-3\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth> Next </Button>\r\n                }\r\n                </>\r\n                }\r\n                                        \r\n                      \r\n                 \r\n              \r\n               \r\n                \r\n                                      \r\n\r\n                  {/* Alert error */}\r\n                  <Collapse in={openAlert}>\r\n                    <Alert\r\n                      severity=\"error\"\r\n                      action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\r\n                      {message}\r\n                    </Alert>\r\n                  </Collapse>\r\n\r\n                 \r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <Link href=\"/signin\" variant=\"body2\"> Already have an account? Sign In </Link>\r\n                    </Grid>\r\n                  </Grid>    \r\n                </form> \r\n                </>\r\n                )}\r\n            </Formik>  \r\n          </div>\r\n        </Grid> \r\n        <Grid item xs={2}></Grid>\r\n      </Grid>   \r\n    )\r\n}\r\nexport default SignUp\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const handleChangeImage = (e, setFieldValue) => {\r\n//   setFieldValue(\"photo\", e.target.files[0])\r\n//   if(e.target.files.length === 0) {\r\n//     setIsProfile(false)\r\n//     setFileName('')\r\n//   } \r\n//   else {\r\n//     setIsProfile(true)\r\n//     setFileName(e.target.files[0].name)\r\n//   }\r\n// }\r\n\r\n\r\n// // Edit the profile image\r\n// const editProfile =  (values) => {\r\n//  values.fileName = fileName\r\n//  if(typeof values.photo === 'object' ) {\r\n//   const reader = new FileReader()\r\n//   reader.readAsDataURL(values.photo)\r\n//   reader.onloadend = () => {\r\n//     values.photo = reader.result\r\n//     signUpUser(values)\r\n//   }\r\n//  } else {\r\n//   signUpUser(values)\r\n//  }\r\n// }\r\n\r\n{/* <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \r\n<Button style={{display:'flex', alignItems:'center', margin:'5px 0px'}} color='primary'  variant=\"outlined\">\r\n<div style={{marginRight:'7px'}}><ImageIcon/></div>\r\n<label htmlFor=\"file\">{fileName ? `${fileName} UPLOADED` : 'PROFILE IMAGE'} </label></Button>\r\n{props.errors.photo && props.touched.photo ?  <div className=\"error\">{props.errors.photo}</div>  : null} */}"]},"metadata":{},"sourceType":"module"}