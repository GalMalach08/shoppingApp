{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\ShoppingProject\\\\client\\\\src\\\\components\\\\productCard\\\\ProductCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // Redux\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCartProducts, addCartProducts, updateTotalPrice } from '../../store/actions'; // Material ui\n\nimport { Divider, IconButton, Card, CardContent, CardHeader, Button, CardMedia, Avatar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add'; // Cloudinary\n\nimport { Image } from 'cloudinary-react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '30px'\n  },\n  media: {\n    height: '250px',\n    width: '250px'\n  },\n  previewmedia: {\n    width: '300px',\n    height: '200px'\n  },\n  fab: {\n    position: 'fixed',\n    bottom: '10px',\n    left: '75%',\n    whiteSpace: 'nowrap',\n    zIndex: '50px',\n    borderRadius: '20px',\n    backgroundColor: 'lightblue'\n  },\n  follow: {\n    textAlign: 'right'\n  },\n  card: {\n    backgroundImage: \"fff\"\n  },\n  title: {\n    fontWeight: '600',\n    fontSize: '16px'\n  },\n  divider: {\n    margin: '15px 0px'\n  },\n  icon: {\n    cursor: 'pointer',\n    \"&:hover\": {\n      backgroundColor: '#F5F3F3',\n      borderRadius: '100px'\n    }\n  }\n}));\n\nconst VacationCard = ({\n  product,\n  reduceQuantity,\n  addQuantity\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cart = JSON.parse(localStorage.getItem('availableCart'));\n  const cartProducts = useSelector(state => state.products.cartProducts);\n  const classes = useStyles();\n\n  const addToCart = async (id, amount, price) => {\n    const response = await fetch('/cart_item', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount,\n        price: price * amount,\n        ProductId: id,\n        CartId: cart.id\n      })\n    });\n    const {\n      cartItem\n    } = await response.json();\n    console.log(cartItem);\n\n    if (cartItem) {\n      const cartItemsArr = cartProducts;\n      const changedItem = cartItemsArr.find(item => item.id === cartItem.ProductId);\n\n      if (changedItem) {\n        dispatch(updateTotalPrice(cartItem.price - changedItem.totalPrice));\n        changedItem.amount = cartItem.amount;\n        changedItem.totalPrice = cartItem.price;\n        dispatch(setCartProducts(cartItemsArr));\n      } else {\n        const newProductInCart = {\n          id: cartItem.ProductId,\n          name: cartItem.Product.name,\n          singlePrice: cartItem.Product.price,\n          amount: cartItem.amount,\n          totalPrice: cartItem.price,\n          image: cartItem.Product.image\n        };\n        dispatch(addCartProducts(newProductInCart));\n        dispatch(updateTotalPrice(newProductInCart.totalPrice));\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(product);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: product.image && /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"contain\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        cloudName: \"malachcloud\",\n        src: product.image,\n        width: \"250\",\n        height: \"200\",\n        crop: \"scale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"properties\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"qty\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(RemoveIcon, {\n            className: classes.icon,\n            fontSize: \"small\",\n            color: \"action\",\n            onClick: () => reduceQuantity(product.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"number\",\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n            fontSize: \"small\",\n            color: \"action\",\n            onClick: () => addQuantity(product.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"price-inr\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-inr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"amount\",\n              children: [\"$\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"ip-add-cart\",\n        type: \"button\",\n        value: \"Add to cart\",\n        onClick: () => addToCart(product.id, product.quantity, product.price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false)\n  /* \r\n           <Card className={classes.card}>\r\n     \r\n  \r\n            <CardMedia className={classes.media} image={product.image}></CardMedia>\r\n  \r\n            <CardContent id='stepTwo'>\r\n              <Typography className={classes.likes}> \r\n                <span className=\"mini_title\"> {product.name}</span>\r\n              </Typography>\r\n              <Divider className={classes.divider}/>\r\n              <Typography className={classes.likes}> \r\n                <span className=\"mini_title\"> price: </span>\r\n                <span className=\"mini_content\"> {product.price}$</span>\r\n              </Typography>\r\n              <Typography className={classes.likes}> \r\n                <span className=\"mini_title\"> quantity </span>\r\n                <span className=\"mini_content\"> <RemoveIcon fontSize=\"small\"  onClick={() => reduceQuantity(product.id)}/> {product.quantity} <AddIcon fontSize=\"small\" onClick={() => addQuantity(product.id)}/> </span>\r\n              </Typography>\r\n              <Divider className={classes.divider}/>\r\n          \r\n            <Button onClick={() => addToCart(product.id, product.quantity, product.price )}>Add to cart</Button>\r\n            </CardContent>\r\n          </Card>    */\n  ;\n};\n\n_s(VacationCard, \"OKry8buxTADNxFSmGscnPgxIwd4=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = VacationCard;\nexport default VacationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacationCard\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/ShoppingProject/client/src/components/productCard/ProductCard.js"],"names":["React","useEffect","useDispatch","useSelector","setCartProducts","addCartProducts","updateTotalPrice","Divider","IconButton","Card","CardContent","CardHeader","Button","CardMedia","Avatar","Typography","makeStyles","DeleteIcon","EditIcon","RemoveIcon","AddIcon","Image","useStyles","root","display","justifyContent","margin","media","height","width","previewmedia","fab","position","bottom","left","whiteSpace","zIndex","borderRadius","backgroundColor","follow","textAlign","card","backgroundImage","title","fontWeight","fontSize","divider","icon","cursor","VacationCard","product","reduceQuantity","addQuantity","dispatch","cart","JSON","parse","localStorage","getItem","cartProducts","state","products","classes","addToCart","id","amount","price","response","fetch","method","headers","body","stringify","ProductId","CartId","cartItem","json","console","log","cartItemsArr","changedItem","find","item","totalPrice","newProductInCart","name","Product","singlePrice","image","quantity"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCartProducts, addCartProducts, updateTotalPrice } from '../../store/actions'\r\n// Material ui\r\nimport { Divider, IconButton, Card, CardContent, CardHeader,\r\n  Button, CardMedia, Avatar, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'  \r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n// Cloudinary\r\nimport { Image } from 'cloudinary-react'\r\nimport './style.css'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n      display:'flex',\r\n      justifyContent:'center',\r\n      margin:'30px'\r\n    },\r\n    media: {\r\n      height: '250px',\r\n      width:'250px',\r\n    },\r\n    previewmedia: {\r\n      width:'300px',\r\n      height:'200px'\r\n    },\r\n    fab: {\r\n      position:'fixed',\r\n      bottom: '10px',\r\n      left: '75%',\r\n      whiteSpace: 'nowrap',\r\n      zIndex: '50px',\r\n      borderRadius:'20px',\r\n      backgroundColor:'lightblue'\r\n    },\r\n    follow:{\r\n      textAlign:'right'\r\n    },\r\n    card: {\r\n      backgroundImage:\"fff\",\r\n  },\r\n    title: { \r\n      fontWeight:'600',\r\n      fontSize:'16px'\r\n    },\r\n    divider: {\r\n      margin:'15px 0px'\r\n    },\r\n    icon: {\r\n      cursor:'pointer',\r\n       \"&:hover\": {\r\n        backgroundColor: '#F5F3F3',\r\n        borderRadius:'100px',\r\n      }\r\n    }\r\n  }))     \r\n  \r\nconst VacationCard = ({ product, reduceQuantity, addQuantity }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = JSON.parse(localStorage.getItem('availableCart'))\r\n    const cartProducts = useSelector(state => state.products.cartProducts)\r\n    const classes = useStyles()\r\n\r\n\r\n    const addToCart = async (id, amount, price) => {\r\n      const response = await fetch('/cart_item', { \r\n        method: 'POST',\r\n        headers: {\r\n         'Content-Type':'application/json'\r\n       },\r\n       body: JSON.stringify({ amount, price: price * amount, ProductId: id, CartId: cart.id })\r\n       })\r\n       const { cartItem } = await response.json() \r\n       console.log(cartItem)\r\n       if(cartItem) {\r\n        const cartItemsArr = cartProducts\r\n        const changedItem = cartItemsArr.find(item => item.id === cartItem.ProductId)\r\n        if(changedItem) {\r\n          dispatch(updateTotalPrice( cartItem.price - changedItem.totalPrice))\r\n          changedItem.amount = cartItem.amount\r\n          changedItem.totalPrice = cartItem.price\r\n          dispatch(setCartProducts(cartItemsArr))\r\n        } else {\r\n         const newProductInCart = { \r\n           id: cartItem.ProductId,\r\n           name: cartItem.Product.name,\r\n           singlePrice: cartItem.Product.price,\r\n           amount: cartItem.amount,\r\n           totalPrice:cartItem.price,\r\n           image: cartItem.Product.image\r\n         }\r\n          dispatch(addCartProducts(newProductInCart))\r\n          dispatch(updateTotalPrice(newProductInCart.totalPrice))\r\n     \r\n        }\r\n       }\r\n\r\n    }\r\n    useEffect(() => {\r\n    console.log(product);\r\n    }, [])\r\n    return (\r\n      <>\r\n     { product.image &&\r\n   \r\n      <div class=\"contain\">\r\n      <Image cloudName=\"malachcloud\" src={product.image} width=\"250\" height=\"200\" crop=\"scale\" />\r\n  <h3>{product.name}</h3>\r\n \r\n \r\n  <div class=\"properties\">\r\n    <div class=\"qty\">\r\n      <h4>Quantity</h4>\r\n       <RemoveIcon className={classes.icon} fontSize=\"small\" color=\"action\"   onClick={() => reduceQuantity(product.id)}/> \r\n      <span class=\"number\">{product.quantity}</span>\r\n      <AddIcon fontSize=\"small\" color=\"action\"  onClick={() => addQuantity(product.id)}/>\r\n    </div><div class=\"price\">\r\n      <h4>Price</h4>\r\n      <span class=\"price-inr\">\r\n        <i class=\"fa fa-inr\"></i>\r\n        <span class=\"amount\">${product.price}</span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <input class=\"ip-add-cart\" type=\"button\" value=\"Add to cart\" onClick={() => addToCart(product.id, product.quantity, product.price )} />\r\n</div>\r\n\r\n\r\n\r\n     }\t\r\n </>\r\n\r\n/* \r\n         <Card className={classes.card}>\r\n   \r\n\r\n          <CardMedia className={classes.media} image={product.image}></CardMedia>\r\n\r\n          <CardContent id='stepTwo'>\r\n            <Typography className={classes.likes}> \r\n              <span className=\"mini_title\"> {product.name}</span>\r\n            </Typography>\r\n            <Divider className={classes.divider}/>\r\n            <Typography className={classes.likes}> \r\n              <span className=\"mini_title\"> price: </span>\r\n              <span className=\"mini_content\"> {product.price}$</span>\r\n            </Typography>\r\n            <Typography className={classes.likes}> \r\n              <span className=\"mini_title\"> quantity </span>\r\n              <span className=\"mini_content\"> <RemoveIcon fontSize=\"small\"  onClick={() => reduceQuantity(product.id)}/> {product.quantity} <AddIcon fontSize=\"small\" onClick={() => addQuantity(product.id)}/> </span>\r\n            </Typography>\r\n            <Divider className={classes.divider}/>\r\n        \r\n          <Button onClick={() => addToCart(product.id, product.quantity, product.price )}>Add to cart</Button>\r\n          </CardContent>\r\n        </Card>    */\r\n        \r\n    \r\n   \r\n    )\r\n}\r\n\r\nexport default VacationCard\r\n"]},"metadata":{},"sourceType":"module"}