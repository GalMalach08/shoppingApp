{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\ShoppingProject\\\\client\\\\src\\\\components\\\\SignIn\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authUser } from '../../store/actions';\nimport SignInPhoto from '../../images/signPhoto.png';\nimport Carusel from '../caursel/Carusel'; // material ui\n\nimport { Hidden, Grid, TextField, Button, Paper, Collapse, IconButton, InputAdornment, ListItemAvatar, ListItem, List } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert'; // formik\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup'; // css\n\nimport './style.css'; // cloudinary\n\nimport { Image } from 'cloudinary-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '20px'\n  },\n  image: {\n    position: 'relative',\n    backgroundImage: `url(${SignInPhoto})`,\n    backgroundRepeat: 'no-repeat',\n    alignSelf: 'center',\n    backgroundPosition: '0 0',\n    backgroundSize: '454px 618px',\n    flexBasis: '454px',\n    height: '618px'\n  },\n  formGrid: {\n    margin: '70px 15px '\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst SignIn = ({\n  setIsAuth\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [openAlert, setOpenAlert] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [dense, setDense] = useState(false);\n  const [secondary, setSecondary] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const classes = useStyles(); // Formik\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('sorry username is required'),\n      password: Yup.string().required('password is required').min(6, 'password have to be at least 6 characters long')\n    }),\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      loginUser(values);\n    }\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  }); // Handle password visibility\n\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  }; // Log in user\n\n\n  const loginUser = async values => {\n    try {\n      setButtonDisabled(true);\n      const response = await fetch('http://localhost:3001/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const data = await response.json();\n\n      if (data.success) {\n        localStorage.setItem('user', JSON.stringify(data.user));\n        dispatch(authUser(data.user));\n        setIsAuth(true);\n        setButtonDisabled(false);\n        history.push('/');\n      } else {\n        setMessage(data.error);\n        setOpenAlert(true);\n        setButtonDisabled(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      component: Paper,\n      square: true,\n      className: classes.formGrid,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\",\n          width: \"100\",\n          height: \"100\",\n          crop: \"scale\",\n          alt: \"cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            label: \"user name\",\n            name: \"email\",\n            autoFocus: true,\n            ...formik.getFieldProps('username'),\n            ...errorHelper(formik, 'username')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleClickShowPassword,\n                  children: [\" \", showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 82\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 106\n                  }, this), \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)\n            },\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: showPassword ? \"text\" : \"password\",\n            ...formik.getFieldProps('password'),\n            ...errorHelper(formik, 'password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: openAlert,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              action: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                size: \"small\",\n                onClick: () => setOpenAlert(false),\n                children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 109\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 30\n              }, this),\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: buttonDisabled,\n            className: \"my-3\",\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \" Sign In \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                variant: \"body2\",\n                children: \" Don't have an account? Sign Up \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.demo,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dense: dense,\n          children: generate( /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: /*#__PURE__*/_jsxDEV(FolderIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Single-line item\",\n              secondary: secondary ? 'Secondary text' : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"ikvYxm2bApdUwFRvj0lYsaSqywo=\", false, function () {\n  return [useHistory, useDispatch, useStyles, useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/ShoppingProject/client/src/components/SignIn/SignIn.js"],"names":["React","useState","useHistory","Link","useDispatch","authUser","SignInPhoto","Carusel","Hidden","Grid","TextField","Button","Paper","Collapse","IconButton","InputAdornment","ListItemAvatar","ListItem","List","CloseIcon","VisibilityIcon","VisibilityOffIcon","makeStyles","Alert","useFormik","Yup","Image","useStyles","theme","root","marginTop","image","position","backgroundImage","backgroundRepeat","alignSelf","backgroundPosition","backgroundSize","flexBasis","height","formGrid","margin","paper","spacing","display","flexDirection","alignItems","form","width","submit","SignIn","setIsAuth","message","setMessage","openAlert","setOpenAlert","showPassword","setShowPassword","buttonDisabled","setButtonDisabled","dense","setDense","secondary","setSecondary","history","dispatch","classes","formik","initialValues","email","password","validationSchema","object","username","string","required","min","onSubmit","values","resetForm","loginUser","errorHelper","error","errors","touched","helperText","handleClickShowPassword","response","fetch","method","headers","body","JSON","stringify","data","json","success","localStorage","setItem","user","push","console","log","handleSubmit","getFieldProps","endAdornment","demo","generate"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { authUser } from '../../store/actions'\r\nimport SignInPhoto from '../../images/signPhoto.png'\r\nimport Carusel from '../caursel/Carusel'\r\n// material ui\r\nimport { Hidden, Grid, TextField, Button, Paper, Collapse, IconButton, InputAdornment, ListItemAvatar, ListItem, List  } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n// formik\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n// css\r\nimport './style.css'\r\n// cloudinary\r\nimport { Image } from 'cloudinary-react'\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop:'20px',\r\n    },\r\n    image: {\r\n      position:'relative',\r\n      backgroundImage: `url(${SignInPhoto})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      alignSelf: 'center',\r\n      backgroundPosition: '0 0',\r\n      backgroundSize: '454px 618px',\r\n      flexBasis: '454px',\r\n      height: '618px',\r\n    },\r\n    formGrid: {\r\n      margin:'70px 15px '\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n}))\r\n\r\nconst SignIn = ({ setIsAuth }) => {\r\n    const [message, setMessage] = useState('')\r\n    const [openAlert, setOpenAlert] = useState(false)\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n    const [dense, setDense] = useState(false);\r\n    const [secondary, setSecondary] = useState(false);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    // Formik\r\n    const formik = useFormik({\r\n      initialValues:{email:'',password:''},\r\n      validationSchema:Yup.object({\r\n          username:Yup.string()\r\n          .required('sorry username is required'),\r\n          password:Yup.string()\r\n          .required('password is required')\r\n          .min(6, 'password have to be at least 6 characters long')\r\n      }),\r\n      onSubmit:(values,{resetForm}) => {                               \r\n        loginUser(values)\r\n      }\r\n    })\r\n\r\n    const errorHelper = (formik,values) => ({\r\n        error: formik.errors[values] && formik.touched[values] ? true : false,\r\n        helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\r\n    })\r\n  \r\n    // Handle password visibility\r\n    const  handleClickShowPassword = () => {\r\n      setShowPassword(!showPassword)\r\n    }\r\n   \r\n    // Log in user\r\n    const loginUser = async (values) =>{\r\n      try {\r\n        setButtonDisabled(true)\r\n        const response = await fetch('http://localhost:3001/user/login', { method: 'POST',\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        })\r\n        const data = await response.json()\r\n       if(data.success){\r\n          localStorage.setItem('user',JSON.stringify(data.user))\r\n          dispatch(authUser(data.user))\r\n          setIsAuth(true)\r\n          setButtonDisabled(false)\r\n          history.push('/')\r\n       } else {\r\n          setMessage(data.error)\r\n          setOpenAlert(true)\r\n          setButtonDisabled(false)\r\n       }  \r\n    } catch(error) {\r\n       console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n   \r\n        <Grid item xs={12} md={4} component={Paper}  square className={classes.formGrid}>\r\n        <div className={classes.paper}>\r\n        <img src=\"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\" width=\"100\" height=\"100\" crop=\"scale\" alt=\"cart\" />\r\n          <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n            <TextField  variant=\"outlined\" margin=\"normal\" fullWidth label=\"user name\" name=\"email\" autoFocus {...formik.getFieldProps('username')} {...errorHelper(formik,'username')}/>\r\n            \r\n            <TextField \r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleClickShowPassword}> {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}  </IconButton>\r\n                </InputAdornment>\r\n                )}}  \r\n                variant=\"outlined\" margin=\"normal\" fullWidth name=\"password\" label=\"Password\" type={showPassword ? \"text\": \"password\"} {...formik.getFieldProps('password')} {...errorHelper(formik,'password')}/>\r\n                {/* Error Alert */}\r\n                <Collapse in={openAlert}>\r\n                  <Alert\r\n                    severity=\"error\"\r\n                    action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\r\n                    {message}\r\n                  </Alert>\r\n                </Collapse>\r\n\r\n                <Button disabled={buttonDisabled} className=\"my-3\" variant=\"contained\" color=\"primary\"type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} > Sign In </Button>\r\n                \r\n                <Grid container>\r\n                  <Grid item>\r\n                    <Link to=\"/signup\" variant=\"body2\"> Don't have an account? Sign Up </Link>\r\n                  </Grid>\r\n                </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n \r\n\r\n      {/* Sign in form */}\r\n      <Grid item xs={12} md={4}>\r\n      <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {generate(\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <FolderIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                    secondary={secondary ? 'Secondary text' : null}\r\n                  />\r\n                </ListItem>,\r\n              )}\r\n            </List>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    )\r\n}\r\nexport default SignIn\r\n"]},"metadata":{},"sourceType":"module"}