{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\ShoppingProject\\\\client\\\\src\\\\components\\\\home\\\\addVacationModal\\\\AddVacationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addVacationToRedux } from '../../../store/actions'; // Bootstrap\n\nimport Modal from 'react-bootstrap/Modal'; // Formik\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // React toastify \n\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Material ui\n\nimport { Input, IconButton, Collapse, TextField, Button, Grid } from '@material-ui/core';\nimport ImageIcon from '@material-ui/icons/Image';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Alert from '@material-ui/lab/Alert';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'; // Css\n\nimport './style.css'; // momentjs \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst moment = require('moment');\n\nconst AddVacationModal = ({\n  addVacationModalOpen,\n  setAddVacationModalOpen\n}) => {\n  _s();\n\n  const [imageName, setImageName] = useState('');\n  const [message, setMessage] = useState('');\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const dispatch = useDispatch(); // Close the modal\n\n  const handleClose = () => setAddVacationModalOpen(false); // Handle the dates state\n\n\n  const handleStartDateChange = date => setSelectedStartDate(date);\n\n  const handleEndDateChange = date => setSelectedEndDate(date); // Formik\n\n\n  const validationSchema = Yup.object().shape({\n    description: Yup.string().required('description is required').min(6, 'That it? write some more(min 6 characters)'),\n    destination: Yup.string().required('destination is required'),\n    price: Yup.string().required('price is required'),\n    image: Yup.string().required('image is required')\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  }); // Toastify\n\n\n  const successToast = message => {\n    toast(message, {\n      draggable: true,\n      position: toast.POSITION.BOTTOM_RIGHT,\n      transition: Zoom,\n      autoClose: 2000\n    });\n  }; // Add vacation\n\n\n  const addVacation = async values => {\n    try {\n      setButtonDisabled(true);\n      let end_date = moment(selectedEndDate).format('L').split('/');\n      let start_date = moment(selectedStartDate).format('L').split('/');\n      const tmp = end_date[0];\n      end_date[0] = end_date[1];\n      end_date[1] = tmp;\n      end_date = end_date.join('/');\n      const tmp1 = start_date[0];\n      start_date[0] = start_date[1];\n      start_date[1] = tmp1;\n      start_date = start_date.join('/');\n      const res = await fetch('https://vacationweb.herokuapp.com/vacation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ ...values,\n          end_date,\n          start_date,\n          imageName\n        })\n      });\n      const {\n        vacation,\n        error\n      } = await res.json();\n\n      if (vacation) {\n        dispatch(addVacationToRedux(vacation));\n        setButtonDisabled(false);\n        handleClose();\n        window.scrollTo(0, document.body.scrollHeight);\n        successToast('Vacation Added! 😎');\n      } else {\n        setMessage(error);\n        setOpenAlert(true);\n        setButtonDisabled(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Handle image change  \n\n\n  const handleChangeImage = (e, setFieldValue) => {\n    const reader = new FileReader();\n    setFieldValue('image', e.target.files[0]);\n\n    if (e.target.files.length === 0) {\n      setImageName('');\n      setFieldValue('image', '');\n    } else {\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onloadend = () => {\n        setFieldValue('image', reader.result);\n      };\n\n      setImageName(e.target.files[0].name);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: addVacationModalOpen,\n      onHide: handleClose,\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Modal.Title, {\n          style: {\n            fontWeight: '700',\n            margin: 'auto'\n          },\n          children: \" Add new vacation \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 32\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            destination: '',\n            description: '',\n            start_date: '',\n            end_date: '',\n            price: '',\n            image: ''\n          },\n          onSubmit: (values, {\n            resetForm\n          }) => addVacation(values, resetForm),\n          validationSchema: validationSchema,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: 'center'\n            },\n            onSubmit: props.handleSubmit,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"MuiInputBases\",\n              margin: \"normal\",\n              name: \"destination\",\n              label: \"Destination\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...props.getFieldProps('destination'),\n              ...errorHelper(props, 'destination')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"MuiInputBases\",\n              margin: \"normal\",\n              name: \"description\",\n              label: \"Description\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...props.getFieldProps('description'),\n              ...errorHelper(props, 'description')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"MuiInputBases\",\n              margin: \"normal\",\n              name: \"price\",\n              label: \"Price\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...props.getFieldProps('price'),\n              ...errorHelper(props, 'price')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                utils: DateFnsUtils,\n                children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  style: {\n                    margin: '3px 22px 12px 0px',\n                    border: '1px solid lightgrey',\n                    padding: '5px'\n                  },\n                  label: \"start date\",\n                  format: \"dd/MM/yyyy\",\n                  value: selectedStartDate,\n                  onChange: handleStartDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  label: \"end date\",\n                  style: {\n                    margin: '3px 22px 12px 0px',\n                    border: '1px solid lightgrey',\n                    padding: '5px'\n                  },\n                  format: \"dd/MM/yyyy\",\n                  value: selectedEndDate,\n                  onChange: handleEndDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"file\",\n              className: \"inputfile\",\n              type: \"file\",\n              name: \"photo\",\n              onChange: e => handleChangeImage(e, props.setFieldValue),\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                display: 'block',\n                margin: '5px'\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n                className: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 113\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                children: [imageName ? `${imageName} UPLOADED` : 'VACATION IMAGE', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 138\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), props.errors.image && props.touched.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: props.errors.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 75\n            }, this) : null, /*#__PURE__*/_jsxDEV(Collapse, {\n              in: openAlert,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                action: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"inherit\",\n                  size: \"small\",\n                  onClick: () => setOpenAlert(false),\n                  children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 121\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 42\n                }, this),\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: buttonDisabled,\n              className: \"my-3\",\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              size: \"large\",\n              children: \" Add vacation \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      draggable: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddVacationModal, \"szvxnUxvT4fVbx3vwp0AtfhTKAI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddVacationModal;\nexport default AddVacationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVacationModal\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/ShoppingProject/client/src/components/home/addVacationModal/AddVacationModal.js"],"names":["React","useState","useDispatch","addVacationToRedux","Modal","Formik","Yup","ToastContainer","toast","Zoom","Input","IconButton","Collapse","TextField","Button","Grid","ImageIcon","CloseIcon","Alert","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","moment","require","AddVacationModal","addVacationModalOpen","setAddVacationModalOpen","imageName","setImageName","message","setMessage","buttonDisabled","setButtonDisabled","openAlert","setOpenAlert","selectedStartDate","setSelectedStartDate","Date","selectedEndDate","setSelectedEndDate","dispatch","handleClose","handleStartDateChange","date","handleEndDateChange","validationSchema","object","shape","description","string","required","min","destination","price","image","errorHelper","formik","values","error","errors","touched","helperText","successToast","draggable","position","POSITION","BOTTOM_RIGHT","transition","autoClose","addVacation","end_date","format","split","start_date","tmp","join","tmp1","res","fetch","method","headers","body","JSON","stringify","vacation","json","window","scrollTo","document","scrollHeight","console","log","handleChangeImage","e","setFieldValue","reader","FileReader","target","files","length","readAsDataURL","onloadend","result","name","fontWeight","margin","resetForm","props","textAlign","handleSubmit","getFieldProps","border","padding","display"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addVacationToRedux } from '../../../store/actions'\r\n// Bootstrap\r\nimport Modal from 'react-bootstrap/Modal'\r\n// Formik\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n// React toastify \r\nimport { ToastContainer, toast, Zoom } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n// Material ui\r\nimport { Input, IconButton, Collapse, TextField, Button, Grid  } from '@material-ui/core'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\n// Css\r\nimport './style.css'\r\n// momentjs \r\nconst moment = require('moment')\r\n\r\nconst AddVacationModal = ({ addVacationModalOpen, setAddVacationModalOpen }) => {\r\n    const [imageName, setImageName] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n    const [openAlert, setOpenAlert] = useState(false)\r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new Date())\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new Date())\r\n    const dispatch = useDispatch()\r\n\r\n    // Close the modal\r\n    const handleClose = () => setAddVacationModalOpen(false)\r\n   \r\n    // Handle the dates state\r\n    const handleStartDateChange = (date) => setSelectedStartDate(date)\r\n    const handleEndDateChange = (date) => setSelectedEndDate(date)\r\n\r\n    // Formik\r\n    const validationSchema = Yup.object().shape({\r\n        description:Yup.string()\r\n        .required('description is required')\r\n        .min(6, 'That it? write some more(min 6 characters)'),\r\n        destination:Yup.string()\r\n        .required('destination is required'),\r\n        price:Yup.string()\r\n        .required('price is required'),\r\n        image:Yup.string()\r\n        .required('image is required'),\r\n     })\r\n    const errorHelper = (formik,values) => ({\r\n        error: formik.errors[values] && formik.touched[values] ? true : false,\r\n        helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\r\n    })\r\n\r\n// Toastify\r\nconst successToast = (message) => {\r\n    toast(message, { \r\n     draggable: true, \r\n     position: toast.POSITION.BOTTOM_RIGHT,\r\n     transition: Zoom,\r\n     autoClose: 2000\r\n    })\r\n  }\r\n\r\n    // Add vacation\r\n    const addVacation = async (values) => {\r\n        try {\r\n            setButtonDisabled(true)\r\n            let end_date =  moment(selectedEndDate).format('L').split('/')\r\n            let start_date =  moment(selectedStartDate).format('L').split('/')\r\n            const tmp = end_date[0]\r\n            end_date[0] = end_date[1]\r\n            end_date[1] = tmp\r\n            end_date = end_date.join('/')\r\n            const tmp1 = start_date[0]\r\n            start_date[0] = start_date[1]\r\n            start_date[1] = tmp1\r\n            start_date = start_date.join('/')\r\n            const res = await fetch('https://vacationweb.herokuapp.com/vacation',{\r\n                 method: 'POST',\r\n                 headers: {\r\n                     'Content-Type':'application/json'\r\n                 },\r\n                 body: JSON.stringify({...values, end_date, start_date, imageName })\r\n                 })\r\n            const { vacation, error } = await res.json()\r\n            if(vacation) {\r\n                dispatch(addVacationToRedux(vacation))\r\n                setButtonDisabled(false)\r\n                handleClose()\r\n                window.scrollTo(0,document.body.scrollHeight)\r\n                successToast('Vacation Added! 😎')\r\n            } else {\r\n                setMessage(error)\r\n                setOpenAlert(true)\r\n                setButtonDisabled(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n        \r\n    // Handle image change  \r\n    const handleChangeImage = (e,setFieldValue) => {\r\n      const reader = new FileReader()\r\n      setFieldValue('image', e.target.files[0])\r\n      if(e.target.files.length === 0) {\r\n        setImageName('')\r\n        setFieldValue('image','')\r\n      } \r\n      else {\r\n        reader.readAsDataURL(e.target.files[0])\r\n        reader.onloadend = () => {\r\n          setFieldValue('image',reader.result)\r\n        }\r\n        setImageName(e.target.files[0].name)\r\n      }\r\n    }\r\n    return (\r\n        <>    \r\n            <Modal show={addVacationModalOpen} onHide={handleClose} size=\"lg\" centered>\r\n                <Modal.Header> <Modal.Title style={{fontWeight:'700', margin:'auto'}}> Add new vacation </Modal.Title> </Modal.Header>\r\n                <Modal.Body>\r\n                  <Formik\r\n                        initialValues={{ destination: '', description: '', start_date: '', end_date: '', price: '', image: ''}}\r\n                        onSubmit={(values,{resetForm}) => addVacation(values, resetForm)}\r\n                        validationSchema={validationSchema}\r\n                        enableReinitialize={true}>\r\n                        {(props) => (\r\n                            <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\r\n                            <TextField className=\"MuiInputBases\" margin=\"normal\" name=\"destination\" label=\"Destination\" variant=\"outlined\" fullWidth \r\n                            {...props.getFieldProps('destination')} {...errorHelper(props,'destination')}/> \r\n                            \r\n                            <TextField className=\"MuiInputBases\" margin=\"normal\" name=\"description\" label=\"Description\" variant=\"outlined\" fullWidth \r\n                            {...props.getFieldProps('description')} {...errorHelper(props,'description')}/> \r\n\r\n                            <TextField className=\"MuiInputBases\" margin=\"normal\" name=\"price\" label=\"Price\" variant=\"outlined\" fullWidth \r\n                            {...props.getFieldProps('price')} {...errorHelper(props,'price')}/>  \r\n\r\n                            <Grid item xs={6} md={3}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                    style={{margin:'3px 22px 12px 0px', border:'1px solid lightgrey', padding:'5px'}}\r\n                                    label=\"start date\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    value={selectedStartDate}\r\n                                    onChange={handleStartDateChange}\r\n                                    />\r\n                                    <KeyboardDatePicker\r\n                                    label=\"end date\"\r\n                                    style={{margin:'3px 22px 12px 0px', border:'1px solid lightgrey', padding:'5px'}}\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    value={selectedEndDate}\r\n                                    onChange={handleEndDateChange}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </Grid>  \r\n                        \r\n                            <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \r\n                            <Button style={{display:'block', margin:'5px'}} color='primary'  variant=\"outlined\"><ImageIcon className=\"\"/><label htmlFor=\"file\">{imageName ? `${imageName} UPLOADED` : 'VACATION IMAGE'} </label></Button>\r\n                            {props.errors.image && props.touched.image ?  <div className=\"error\">{props.errors.image}</div>  : null} \r\n\r\n                            {/* Alert error */}\r\n                             <Collapse in={openAlert}>\r\n                                <Alert\r\n                                severity=\"error\"\r\n                                action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\r\n                                    {message}\r\n                                </Alert>\r\n                            </Collapse> \r\n                            \r\n                            <Button disabled={buttonDisabled} className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> Add vacation </Button>\r\n                            </form> )}\r\n                        </Formik>  \r\n                </Modal.Body>\r\n            </Modal> \r\n            {/* ToastContainer */}\r\n            <ToastContainer  draggable={false} />   \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddVacationModal\r\n"]},"metadata":{},"sourceType":"module"}