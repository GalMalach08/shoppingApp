{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\ShoppingProject\\\\client\\\\src\\\\components\\\\home\\\\editModal\\\\EditModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateVacations } from '../../../store/actions'; // material ui\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input, Button, TextField, Grid, Collapse, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ImageIcon from '@material-ui/icons/Image';\nimport Alert from '@material-ui/lab/Alert';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'; // React toastify \n\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // bootstrap \n\nimport Modal from 'react-bootstrap/Modal'; // Formik\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'; // Css\n\nimport './style.css'; // momentjs \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst moment = require('moment');\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    overflowY: 'auto',\n    paddingTop: '180px',\n    marginTop: '80px',\n    maxHeight: '500px'\n  }\n}));\n\nconst EditModal = ({\n  editModalOpen,\n  setEditModalOpen,\n  vacationToEdit\n}) => {\n  _s();\n\n  const [initialValues, setInitialValues] = useState('');\n  const [imageName, setImageName] = useState('');\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [message, setMessage] = useState('');\n  const [openAlert, setOpenAlert] = useState(false);\n  const [selectedStartDate, setSelectedStartDate] = useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = useState(new Date());\n  const dispatch = useDispatch();\n  const vacations = useSelector(state => state.vacations.data);\n  const classes = useStyles(); // Formik\n\n  const validationSchema = Yup.object().shape({\n    description: Yup.string().required('description is required').min(6, 'That it? write some more(min 6 characters)'),\n    destination: Yup.string().required('destination is required'),\n    image: Yup.string().required('image is required'),\n    price: Yup.string().required('price is required')\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  }); // Toastify\n\n\n  const successToast = message => {\n    toast(message, {\n      draggable: true,\n      position: toast.POSITION.BOTTOM_RIGHT,\n      transition: Zoom,\n      autoClose: 2000\n    });\n  }; // Handle the dates state\n\n\n  const handleStartDateChange = date => setSelectedStartDate(date);\n\n  const handleEndDateChange = date => setSelectedEndDate(date); // Close the modal\n\n\n  const handleClose = () => {\n    setEditModalOpen(false);\n    setInitialValues({\n      description: '',\n      destination: '',\n      start_date: '',\n      end_date: '',\n      price: ''\n    });\n  }; // Handle image change  \n\n\n  const handleChangeImage = (e, setFieldValue) => {\n    const reader = new FileReader();\n    setFieldValue('image', e.target.files[0]);\n\n    if (e.target.files.length === 0) {\n      setImageName('');\n      setFieldValue('image', '');\n    } else {\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onloadend = () => {\n        setFieldValue('image', reader.result);\n      };\n\n      setImageName(e.target.files[0].name);\n    }\n  }; // Change the format of the date\n\n\n  const handleDate = date => {\n    let new_date = date.split('/');\n    const tmp = new_date[0];\n    new_date[0] = new_date[1];\n    new_date[1] = tmp;\n    new_date = new_date.join('/');\n    return new_date;\n  }; // Get the chosen vacation and set the initial values\n\n\n  const getVacation = async () => {\n    const res = await fetch(`https://vacationweb.herokuapp.com/vacation/${vacationToEdit}`);\n    const {\n      vacation\n    } = await res.json();\n    setSelectedStartDate(handleDate(vacation.start_date));\n    setSelectedEndDate(handleDate(vacation.end_date));\n    setInitialValues(vacation);\n    setImageName(vacation.imageName);\n  }; // Update vacation settings\n\n\n  const editVacation = async values => {\n    setButtonDisabled(true);\n    if (values.image === initialValues.image) delete values.image;\n    let end_date = handleDate(moment(selectedEndDate).format('L'));\n    let start_date = handleDate(moment(selectedStartDate).format('L'));\n    const res = await fetch('https://vacationweb.herokuapp.com/vacation', {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...values,\n        start_date,\n        end_date,\n        imageName\n      })\n    });\n    const {\n      vacation,\n      error\n    } = await res.json();\n\n    if (vacation) {\n      let newVacationArray = vacations;\n      const findIndex = vacations.findIndex(item => item.id === vacation.id);\n      newVacationArray[findIndex] = vacation;\n      console.log('after ', newVacationArray);\n      dispatch(updateVacations(newVacationArray));\n      handleClose();\n      successToast('Vacation Updated! 😀');\n      setButtonDisabled(false);\n    } else {\n      setMessage(error);\n      setOpenAlert(true);\n      setButtonDisabled(false);\n    }\n  };\n\n  useEffect(() => {\n    if (editModalOpen) getVacation();\n  }, [editModalOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [initialValues && /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      centered: true,\n      show: editModalOpen,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Modal.Title, {\n          style: {\n            fontWeight: '700',\n            margin: 'auto'\n          },\n          children: \" Edit vacation \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          onSubmit: (values, {\n            resetForm\n          }) => editVacation(values, resetForm),\n          validationSchema: validationSchema,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: 'center'\n            },\n            onSubmit: props.handleSubmit,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"MuiInputBases\",\n              margin: \"normal\",\n              name: \"destination\",\n              label: \"Destination\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...props.getFieldProps('destination'),\n              ...errorHelper(props, 'destination')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"MuiInputBases\",\n              margin: \"normal\",\n              name: \"description\",\n              label: \"Description\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...props.getFieldProps('description'),\n              ...errorHelper(props, 'description')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"MuiInputBases\",\n              margin: \"normal\",\n              name: \"price\",\n              label: \"Price\",\n              variant: \"outlined\",\n              fullWidth: true,\n              ...props.getFieldProps('price'),\n              ...errorHelper(props, 'price')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                utils: DateFnsUtils,\n                children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  style: {\n                    margin: '3px 22px 12px 0px',\n                    border: '1px solid lightgrey',\n                    padding: '5px'\n                  },\n                  label: \"start date\",\n                  format: \"dd/MM/yyyy\",\n                  value: selectedStartDate,\n                  onChange: handleStartDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  label: \"end date\",\n                  style: {\n                    margin: '3px 22px 12px 0px',\n                    border: '1px solid lightgrey',\n                    padding: '5px'\n                  },\n                  format: \"dd/MM/yyyy\",\n                  value: selectedEndDate,\n                  onChange: handleEndDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"file\",\n              className: \"inputfile\",\n              type: \"file\",\n              name: \"photo\",\n              onChange: e => handleChangeImage(e, props.setFieldValue),\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                display: 'block',\n                margin: '5px 0px'\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n                className: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 107\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                children: [imageName ? `${imageName} UPLOADED` : ' Vacation image', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 132\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), props.errors.photo && props.touched.photo ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: props.errors.photo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 65\n            }, this) : null, /*#__PURE__*/_jsxDEV(Collapse, {\n              in: openAlert,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                action: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"inherit\",\n                  size: \"small\",\n                  onClick: () => setOpenAlert(false),\n                  children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 113\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 34\n                }, this),\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: buttonDisabled,\n              className: \"my-3\",\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              size: \"large\",\n              children: \" Update vacation \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      draggable: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditModal, \"OOkTm2iTljDAUTNC4vWMfw9HCpM=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/ShoppingProject/client/src/components/home/editModal/EditModal.js"],"names":["React","useEffect","useState","useDispatch","useSelector","updateVacations","makeStyles","Input","Button","TextField","Grid","Collapse","IconButton","CloseIcon","ImageIcon","Alert","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","ToastContainer","toast","Zoom","Modal","Formik","Yup","moment","require","useStyles","root","overflowY","paddingTop","marginTop","maxHeight","EditModal","editModalOpen","setEditModalOpen","vacationToEdit","initialValues","setInitialValues","imageName","setImageName","buttonDisabled","setButtonDisabled","message","setMessage","openAlert","setOpenAlert","selectedStartDate","setSelectedStartDate","Date","selectedEndDate","setSelectedEndDate","dispatch","vacations","state","data","classes","validationSchema","object","shape","description","string","required","min","destination","image","price","errorHelper","formik","values","error","errors","touched","helperText","successToast","draggable","position","POSITION","BOTTOM_RIGHT","transition","autoClose","handleStartDateChange","date","handleEndDateChange","handleClose","start_date","end_date","handleChangeImage","e","setFieldValue","reader","FileReader","target","files","length","readAsDataURL","onloadend","result","name","handleDate","new_date","split","tmp","join","getVacation","res","fetch","vacation","json","editVacation","format","method","headers","body","JSON","stringify","newVacationArray","findIndex","item","id","console","log","fontWeight","margin","resetForm","props","textAlign","handleSubmit","getFieldProps","border","padding","display","photo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateVacations } from '../../../store/actions'\r\n// material ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Input, Button, TextField, Grid, Collapse, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n// React toastify \r\nimport { ToastContainer, toast, Zoom } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n// bootstrap \r\nimport Modal from 'react-bootstrap/Modal'\r\n// Formik\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n// Css\r\nimport './style.css'\r\n// momentjs \r\nconst moment = require('moment')\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    overflowY:'auto',\r\n    paddingTop:'180px',\r\n    marginTop:'80px',\r\n    maxHeight:'500px'\r\n  }\r\n}))\r\nconst EditModal = ({ editModalOpen ,setEditModalOpen, vacationToEdit })  =>  {\r\n    const [initialValues, setInitialValues] = useState('')\r\n    const [imageName, setImageName] = useState('')\r\n    const [buttonDisabled, setButtonDisabled] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [openAlert, setOpenAlert] = useState(false)\r\n    const [selectedStartDate, setSelectedStartDate] = useState(new Date())\r\n    const [selectedEndDate, setSelectedEndDate] = useState(new Date())\r\n    const dispatch = useDispatch()\r\n    const vacations = useSelector(state => state.vacations.data)\r\n    const classes = useStyles()\r\n\r\n    // Formik\r\n    const validationSchema = Yup.object().shape({\r\n      description:Yup.string()\r\n      .required('description is required')\r\n      .min(6, 'That it? write some more(min 6 characters)'),\r\n      destination:Yup.string()\r\n      .required('destination is required'),\r\n       image:Yup.string()\r\n      .required('image is required'),\r\n      price:Yup.string()\r\n      .required('price is required'),\r\n    })\r\n    const errorHelper = (formik,values) => ({\r\n      error: formik.errors[values] && formik.touched[values] ? true : false,\r\n      helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\r\n  })\r\n\r\n  // Toastify\r\n  const successToast = (message) => {\r\n    toast(message, { \r\n     draggable: true, \r\n     position: toast.POSITION.BOTTOM_RIGHT,\r\n     transition: Zoom,\r\n     autoClose: 2000\r\n    })\r\n  }\r\n \r\n    // Handle the dates state\r\n    const handleStartDateChange = (date) => setSelectedStartDate(date)\r\n    const handleEndDateChange = (date) => setSelectedEndDate(date)\r\n    \r\n    // Close the modal\r\n    const handleClose = () => {\r\n      setEditModalOpen(false)\r\n      setInitialValues({description:'', destination:'', start_date:'', end_date:'', price:''})\r\n    }\r\n     \r\n    // Handle image change  \r\n    const handleChangeImage = (e,setFieldValue) => {\r\n      const reader = new FileReader()\r\n      setFieldValue('image', e.target.files[0])\r\n      if(e.target.files.length === 0) {\r\n      setImageName('')\r\n      setFieldValue('image','')\r\n      } \r\n      else {\r\n        reader.readAsDataURL(e.target.files[0])\r\n        reader.onloadend = () => {\r\n        setFieldValue('image',reader.result)\r\n        }\r\n        setImageName(e.target.files[0].name)\r\n      }\r\n  }\r\n\r\n  // Change the format of the date\r\n  const handleDate = (date) => {\r\n    let new_date = date.split('/')\r\n    const tmp = new_date[0]\r\n    new_date[0] = new_date[1]\r\n    new_date[1] = tmp\r\n    new_date = new_date.join('/')\r\n    return new_date\r\n  }\r\n\r\n  // Get the chosen vacation and set the initial values\r\n  const getVacation = async () => {\r\n    const res = await fetch(`https://vacationweb.herokuapp.com/vacation/${vacationToEdit}`)\r\n    const { vacation } = await res.json()\r\n    setSelectedStartDate(handleDate(vacation.start_date))\r\n    setSelectedEndDate(handleDate(vacation.end_date))\r\n    setInitialValues(vacation)\r\n    setImageName(vacation.imageName)\r\n  }\r\n\r\n    // Update vacation settings\r\n    const editVacation = async (values) => {\r\n      setButtonDisabled(true)\r\n      if(values.image === initialValues.image) delete values.image\r\n      let end_date =  handleDate(moment(selectedEndDate).format('L'))\r\n      let start_date =  handleDate(moment(selectedStartDate).format('L'))\r\n      const res = await fetch('https://vacationweb.herokuapp.com/vacation',{\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({...values, start_date, end_date, imageName})\r\n        })\r\n        const { vacation, error } = await res.json()\r\n        if(vacation) {\r\n          let newVacationArray = vacations\r\n          const findIndex = vacations.findIndex(item => item.id === vacation.id)\r\n          newVacationArray[findIndex] = vacation\r\n          console.log('after ', newVacationArray)\r\n          dispatch(updateVacations(newVacationArray))\r\n          handleClose()\r\n          successToast('Vacation Updated! 😀')\r\n          setButtonDisabled(false)\r\n        } else {\r\n          setMessage(error)\r\n          setOpenAlert(true)\r\n          setButtonDisabled(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(editModalOpen) getVacation() \r\n    }, [editModalOpen])\r\n   \r\n    return (\r\n      <>\r\n      { initialValues &&\r\n        <Modal size=\"lg\"  centered show={editModalOpen} onHide={handleClose}>\r\n        <Modal.Header className=\"\"> <Modal.Title style={{fontWeight:'700',margin:'auto'}}> Edit vacation </Modal.Title> </Modal.Header>\r\n      <Modal.Body>\r\n      <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={(values,{resetForm}) => editVacation(values, resetForm)}\r\n              validationSchema={validationSchema}\r\n              enableReinitialize={true}>\r\n              {(props) => (\r\n                <form style={{textAlign:'center'}} onSubmit={props.handleSubmit} autoComplete=\"off\">\r\n                  <TextField className=\"MuiInputBases\" margin=\"normal\" name=\"destination\" label=\"Destination\" variant=\"outlined\" fullWidth \r\n                  {...props.getFieldProps('destination')} {...errorHelper(props,'destination')}/> \r\n                  \r\n                  <TextField className=\"MuiInputBases\" margin=\"normal\" name=\"description\" label=\"Description\" variant=\"outlined\" fullWidth \r\n                  {...props.getFieldProps('description')} {...errorHelper(props,'description')}/>     \r\n              \r\n                  <TextField className=\"MuiInputBases\" margin=\"normal\" name=\"price\" label=\"Price\" variant=\"outlined\" fullWidth \r\n                  {...props.getFieldProps('price')} {...errorHelper(props,'price')}/>  \r\n\r\n                  <Grid item xs={6} md={3}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                        style={{margin:'3px 22px 12px 0px', border:'1px solid lightgrey', padding:'5px'}}\r\n                        label=\"start date\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                        label=\"end date\"\r\n                        style={{margin:'3px 22px 12px 0px', border:'1px solid lightgrey', padding:'5px'}}\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={selectedEndDate}\r\n                        onChange={handleEndDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  \r\n                  <Input id=\"file\"  className=\"inputfile\" type=\"file\" name=\"photo\" onChange={(e) => handleChangeImage(e,props.setFieldValue )} hidden/> \r\n                  <Button style={{display:'block', margin:'5px 0px'}} color='primary'  variant=\"outlined\"><ImageIcon className=\"\"/><label htmlFor=\"file\">{imageName ? `${imageName} UPLOADED` : ' Vacation image'} </label></Button>\r\n                  {props.errors.photo && props.touched.photo ?  <div className=\"error\">{props.errors.photo}</div>  : null} \r\n\r\n\r\n                  {/* Alert error */}\r\n                     <Collapse in={openAlert}>\r\n                        <Alert\r\n                        severity=\"error\"\r\n                        action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\r\n                        {message}\r\n                        </Alert>\r\n                        </Collapse>\r\n                        <Button disabled={buttonDisabled} className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\"> Update vacation </Button>\r\n                         </form> )}\r\n                    </Formik>  \r\n            </Modal.Body>\r\n          </Modal>\r\n      }\r\n       {/* ToastContainer */}\r\n       <ToastContainer  draggable={false} /> \r\n      </>\r\n    )\r\n  }\r\nexport default EditModal"]},"metadata":{},"sourceType":"module"}