{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05DC\\u05D0\\u05DA \\u05D2\\u05DC\\\\Desktop\\\\ShoppingProject\\\\client\\\\src\\\\components\\\\payment\\\\Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Redux\n\nimport { useSelector } from 'react-redux'; // Components\n\nimport PaymentModal from './PaymentModal'; // Material ui\n\nimport { Grid, TextField, Button, Paper, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport SearchBar from \"material-ui-search-bar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close'; // Dates\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'; // Formik\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup'; // Cloudinary\n\nimport { Image } from 'cloudinary-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '0px'\n  },\n  formGrid: {\n    margin: '20px 40px '\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Payment = () => {\n  _s();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [orderId, setOrderId] = useState(1);\n  const [message, setMessage] = useState('');\n  const [shipmentDatesArr, setShipmentDatesArr] = useState([]);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [searched, setSearched] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const cartItems = useSelector(state => state.products.cartProducts);\n  const totalPrice = useSelector(state => state.products.totalPrice);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const cart = JSON.parse(localStorage.getItem('availableCart'));\n  const classes = useStyles(); // Formik\n\n  const formik = useFormik({\n    initialValues: {\n      street: ' ',\n      city: '',\n      creditNumber: ''\n    },\n    validationSchema: Yup.object({\n      city: Yup.string().required('city is required'),\n      street: Yup.string().required('street is required'),\n      creditNumber: Yup.string().required('credit card is required') // .matches(/^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,'please enter valid credit card')\n\n    }),\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      makeOrder(values);\n    }\n  });\n\n  const errorHelper = (formik, values) => ({\n    error: formik.errors[values] && formik.touched[values] ? true : false,\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values] : null\n  }); // Make an order\n\n\n  const makeOrder = async values => {\n    const orderObj = { ...values,\n      price: totalPrice,\n      shipment_date: new Date(),\n      order_date: selectedDate,\n      CartId: cart.id,\n      UserId: user.id\n    };\n    const response = await fetch('http://localhost:3001/order', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderObj)\n    });\n    const {\n      order\n    } = await response.json();\n    setOrderId(order.id);\n    setModalOpen(true);\n  }; // Get all the cart products and set them in the table\n\n\n  const getProducts = () => {\n    const itemsArr = [];\n    cartItems.forEach(item => {\n      itemsArr.push(item);\n    });\n    setRows(itemsArr);\n  }; // Make the search in the table\n\n\n  const requestSearch = searchedVal => {\n    if (searchedVal === '') {\n      getProducts();\n    } else {\n      const filteredRows = cartItems.filter(row => row.name.toLowerCase().includes(searchedVal.toLowerCase()));\n      setRows(filteredRows);\n    }\n  }; // Set the default values \n\n\n  const getInputValue = inputName => {\n    formik.setFieldValue(inputName, user[inputName]);\n  }; // Handle the date state\n\n\n  const handleDateChange = date => setSelectedDate(date); // Disable specific dates in the date picker\n\n\n  const disableDates = date => {\n    return shipmentDatesArr.filter(item => item.month === date.getMonth() && item.day === date.getDate()).length > 1;\n  }; // Get all the orders\n\n\n  const getOrders = async () => {\n    const res = await fetch('/order');\n    const {\n      orders\n    } = await res.json();\n    const shipmentDatesArr = [];\n    orders.forEach(order => shipmentDatesArr.push({\n      month: new Date(order.shipment_date).getMonth(),\n      day: new Date(order.shipment_date).getDate()\n    }));\n    console.log(shipmentDatesArr);\n    setShipmentDatesArr(shipmentDatesArr);\n  }; // Reset the table\n\n\n  const cancelSearch = () => {\n    getProducts();\n  };\n\n  useEffect(() => {\n    getProducts();\n    getOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      component: Paper,\n      square: true,\n      className: classes.formGrid,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          value: searched,\n          onChange: searchVal => requestSearch(searchVal),\n          onCancelSearch: () => cancelSearch()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"total price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  className: \"product_img\",\n                  cloudName: \"malachcloud\",\n                  src: row.image,\n                  width: \"70\",\n                  height: \"40\",\n                  crop: \"scale\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 17\n                }, this), row.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [\"$\", row.totalPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"total_price_p\",\n                  children: [\"Total price: $\", totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/products/1\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          className: \"m-3\",\n          children: \" Continue shopping \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      component: Paper,\n      square: true,\n      className: classes.formGrid,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\",\n          width: \"100\",\n          height: \"100\",\n          crop: \"scale\",\n          alt: \"cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            label: \"city\",\n            name: \"city\",\n            ...formik.getFieldProps('city'),\n            ...errorHelper(formik, 'city'),\n            onDoubleClick: () => getInputValue('city')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            label: \"street\",\n            name: \"street\",\n            ...formik.getFieldProps('street'),\n            ...errorHelper(formik, 'street'),\n            onDoubleClick: () => getInputValue('street')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              disablePast: true,\n              fullwidth: true,\n              label: \"order date\",\n              format: \"dd/MM/yyyy\",\n              value: selectedDate,\n              onChange: handleDateChange,\n              shouldDisableDate: disableDates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            fullWidth: true,\n            label: \"credit card\",\n            name: \"creditNumber\",\n            ...formik.getFieldProps('creditNumber'),\n            ...errorHelper(formik, 'creditNumber')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: openAlert,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              action: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"inherit\",\n                size: \"small\",\n                onClick: () => setOpenAlert(false),\n                children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 109\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 30\n              }, this),\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: formik.values.city && formik.values.street && formik.values.creditNumber && !formik.errors.creditNumber ? false : true,\n            className: \"my-3\",\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            fullWidth: true,\n            children: \" Send order \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PaymentModal, {\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      orderId: orderId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"CyBbwgNMFo5Oor3FNRBazJCbqhw=\", false, function () {\n  return [useSelector, useSelector, useStyles, useFormik];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/מלאך גל/Desktop/ShoppingProject/client/src/components/payment/Payment.js"],"names":["React","useState","useEffect","Link","useSelector","PaymentModal","Grid","TextField","Button","Paper","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","SearchBar","makeStyles","Alert","CloseIcon","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","useFormik","Yup","Image","useStyles","theme","root","padding","formGrid","margin","paper","spacing","display","flexDirection","alignItems","form","width","marginTop","Payment","modalOpen","setModalOpen","orderId","setOrderId","message","setMessage","shipmentDatesArr","setShipmentDatesArr","openAlert","setOpenAlert","searched","setSearched","rows","setRows","selectedDate","setSelectedDate","Date","cartItems","state","products","cartProducts","totalPrice","user","JSON","parse","localStorage","getItem","cart","classes","formik","initialValues","street","city","creditNumber","validationSchema","object","string","required","onSubmit","values","resetForm","makeOrder","errorHelper","error","errors","touched","helperText","orderObj","price","shipment_date","order_date","CartId","id","UserId","response","fetch","method","headers","body","stringify","order","json","getProducts","itemsArr","forEach","item","push","requestSearch","searchedVal","filteredRows","filter","row","name","toLowerCase","includes","getInputValue","inputName","setFieldValue","handleDateChange","date","disableDates","month","getMonth","day","getDate","length","getOrders","res","orders","console","log","cancelSearch","searchVal","table","map","image","amount","textDecoration","handleSubmit","getFieldProps"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// Redux\r\nimport { useSelector } from 'react-redux'\r\n// Components\r\nimport PaymentModal from './PaymentModal'\r\n// Material ui\r\nimport { Grid, TextField, Button, Paper, Collapse, IconButton, Table, TableBody, TableCell,\r\nTableContainer, TableHead, TableRow } from '@material-ui/core'\r\nimport SearchBar from \"material-ui-search-bar\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n// Dates\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\n// Formik\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n// Cloudinary\r\nimport { Image } from 'cloudinary-react'\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n     padding:'0px'\r\n    },\r\n    formGrid: {\r\n      margin:'20px 40px '\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    }\r\n}))\r\n\r\n\r\nconst Payment = () => {\r\n  const [modalOpen, setModalOpen] = useState(false)  \r\n  const [orderId, setOrderId] = useState(1)  \r\n  const [message, setMessage] = useState('')\r\n  const [shipmentDatesArr, setShipmentDatesArr] = useState([])\r\n  const [openAlert, setOpenAlert] = useState(false)\r\n  const [searched, setSearched] = useState(\"\")\r\n  const [rows, setRows] = useState([])\r\n  const [selectedDate, setSelectedDate] = useState(new Date())\r\n  const cartItems = useSelector(state => state.products.cartProducts)\r\n  const totalPrice = useSelector(state => state.products.totalPrice)\r\n  const user = JSON.parse(localStorage.getItem('user'))\r\n  const cart = JSON.parse(localStorage.getItem('availableCart'))\r\n  const classes = useStyles()\r\n\r\n   \r\n  // Formik\r\n  const formik = useFormik({\r\n    initialValues:{street: ' ', city: '', creditNumber: ''},\r\n    validationSchema:Yup.object({\r\n        city:Yup.string()\r\n        .required('city is required'),\r\n        street:Yup.string()\r\n        .required('street is required'),\r\n        creditNumber:Yup.string()\r\n        .required('credit card is required')\r\n        // .matches(/^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,'please enter valid credit card')\r\n    }),\r\n    onSubmit:(values,{resetForm}) => {                              \r\n      makeOrder(values)\r\n    }\r\n  })\r\n\r\n  const errorHelper = (formik,values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText: formik.errors[values] && formik.touched[values] ? formik.errors[values]:null\r\n  })\r\n\r\n  // Make an order\r\n  const makeOrder = async (values) => {\r\n    const orderObj = {\r\n      ...values,\r\n      price: totalPrice,\r\n      shipment_date:new Date(),\r\n      order_date: selectedDate,\r\n      CartId: cart.id,\r\n      UserId: user.id\r\n      }\r\n      const response = await fetch('http://localhost:3001/order', { method: 'POST',\r\n          headers: {\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify(orderObj)\r\n        })\r\n        const { order } = await response.json()\r\n        setOrderId(order.id)\r\n        setModalOpen(true)\r\n  }\r\n \r\n  // Get all the cart products and set them in the table\r\n  const getProducts =   () => {\r\n    const itemsArr = []\r\n    cartItems.forEach(item => {\r\n      itemsArr.push(item)\r\n    })\r\n    setRows(itemsArr)\r\n  }\r\n\r\n  // Make the search in the table\r\n  const requestSearch = (searchedVal) => {\r\n    if(searchedVal === '') {\r\n        getProducts()\r\n    } else {\r\n        const filteredRows = cartItems.filter((row) => row.name.toLowerCase().includes(searchedVal.toLowerCase()))\r\n        setRows(filteredRows)\r\n      }\r\n  }\r\n\r\n  // Set the default values \r\n  const getInputValue = (inputName) => {\r\n   formik.setFieldValue(inputName,user[inputName])\r\n  }\r\n\r\n  // Handle the date state\r\n  const handleDateChange = (date) => setSelectedDate(date)\r\n\r\n  // Disable specific dates in the date picker\r\n  const disableDates = (date) => {\r\n    return shipmentDatesArr.filter(item => item.month === date.getMonth() && item.day === date.getDate()).length > 1\r\n  }\r\n\r\n  // Get all the orders\r\n  const getOrders = async () => {\r\n    const res = await fetch('/order')\r\n    const { orders } = await res.json() \r\n    const shipmentDatesArr = []\r\n    orders.forEach(order => shipmentDatesArr.push({ month: new Date(order.shipment_date).getMonth(), day: new Date(order.shipment_date).getDate() }))\r\n    console.log(shipmentDatesArr)\r\n    setShipmentDatesArr(shipmentDatesArr)\r\n  }\r\n\r\n  // Reset the table\r\n  const cancelSearch = () => {\r\n    getProducts()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getOrders()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n   \r\n    <Grid container className={classes.root}>\r\n        {/* Products Table */}\r\n        <Grid item xs={12} sm={5}  component={Paper} square className={classes.formGrid}>\r\n          <TableContainer component={Paper}>\r\n            <SearchBar\r\n            value={searched}\r\n            onChange={(searchVal) => requestSearch(searchVal)}\r\n            onCancelSearch={() => cancelSearch()}\r\n            />\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product</TableCell>\r\n                <TableCell>quantity</TableCell>\r\n                <TableCell>total price</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>\r\n                <Image className=\"product_img\"  cloudName=\"malachcloud\" src={row.image} width=\"70\" height=\"40\" crop=\"scale\" />\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell>{row.amount}</TableCell>\r\n                <TableCell>${row.totalPrice}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n                <TableCell>\r\n                  <p className=\"total_price_p\">Total price: ${totalPrice}</p>\r\n                </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Link to='/products/1' style={{textDecoration: 'none'}}>\r\n        <Button variant=\"outlined\" color=\"primary\" className=\"m-3\"> Continue shopping </Button>\r\n      </Link>\r\n    </Grid>\r\n   \r\n   {/* Order form */}\r\n    <Grid item xs={12} sm={5} component={Paper}  square className={classes.formGrid}>\r\n      <div className={classes.paper}>\r\n        <img src=\"https://thumbs.dreamstime.com/b/vegetables-shopping-cart-trolley-grocery-logo-icon-design-vector-171090350.jpg\" width=\"100\" height=\"100\" crop=\"scale\" alt=\"cart\" />\r\n        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n          <TextField variant=\"outlined\" margin=\"normal\" fullWidth label=\"city\" name=\"city\"  {...formik.getFieldProps('city')}\r\n             {...errorHelper(formik,'city')} onDoubleClick={() => getInputValue('city')}/>\r\n          <TextField variant=\"outlined\" margin=\"normal\" fullWidth label=\"street\" name=\"street\"  {...formik.getFieldProps('street')}\r\n             {...errorHelper(formik,'street')} onDoubleClick={() => getInputValue('street')}/>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n              disablePast \r\n              fullwidth\r\n              label=\"order date\"\r\n              format=\"dd/MM/yyyy\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              shouldDisableDate={disableDates}\r\n              />\r\n             \r\n          </MuiPickersUtilsProvider>\r\n            <TextField variant=\"outlined\" margin=\"normal\" fullWidth label=\"credit card\" name=\"creditNumber\"  \r\n            {...formik.getFieldProps('creditNumber')} {...errorHelper(formik,'creditNumber')}/>\r\n                {/* Error Alert */}\r\n                <Collapse in={openAlert}>\r\n                  <Alert\r\n                    severity=\"error\"\r\n                    action={ <IconButton color=\"inherit\" size=\"small\" onClick={() => setOpenAlert(false) }> <CloseIcon fontSize=\"inherit\" /> </IconButton>}>\r\n                    {message}\r\n                  </Alert>\r\n                </Collapse>\r\n                <Button disabled={formik.values.city && formik.values.street\r\n                        && formik.values.creditNumber && ! formik.errors.creditNumber  ? false : true}  className=\"my-3\" variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth> Send order </Button>\r\n              \r\n            </form>\r\n          </div>\r\n        </Grid>\r\n \r\n      \r\n\r\n   <PaymentModal modalOpen={modalOpen} setModalOpen={setModalOpen} orderId={orderId}/>\r\n      </Grid>\r\n  \r\n    )\r\n}\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}